{
    "title": "@round: Arredondar n\u00famero",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@round: Arredondar n\u00famero</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"arredondar-n\u00famero\">Arredondar n\u00famero</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/round/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"contexto\">Contexto</h2>\n<p>Um aluno ficou implorando para o seu professor de FUP arredondar seu\n6.9999999999 para 10 porque ele precisa de um 10 para passar de\nsemestre. Seu trabalho \u00e9 implementar as fun\u00e7\u00f5es ceil, floor e round para\najudar o professor a calcular as notas dos alunos.</p>\n<p>implemente tr\u00eas fun\u00e7\u00f5es:</p>\n<ul>\n<li><code>ceil</code>: que sempre arredonda para cima</li>\n<li><code>floor</code> que sempre arredonda para baixo</li>\n<li><code>round</code>: que arredonda para baixo se a parte fracion\u00e1ria\nfor menor que 0.5 e para cima se for maior ou igual a 0.5.</li>\n</ul>\n<p>Os prot\u00f3tipos das fun\u00e7\u00f5es s\u00e3o em <strong>C</strong>:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> round<span class=\"op\">(</span><span class=\"dt\">float</span> num<span class=\"op\">);</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> floor<span class=\"op\">(</span><span class=\"dt\">float</span> num<span class=\"op\">);</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> ceil<span class=\"op\">(</span><span class=\"dt\">float</span> num<span class=\"op\">);</span></span></code></pre></div>\n<p>Na fun\u00e7\u00e3o principal (main), leia um caractere que representa a\nopera\u00e7\u00e3o (r, f, c) e um n\u00famero do tipo float. Depois, chame a fun\u00e7\u00e3o\ncorrespondente e imprima o resultado.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Um caractere (r, f ou c) representando a opera\u00e7\u00e3o.</li>\n<li>Um n\u00famero float</li>\n</ul>\n<h3 id=\"saida\">Saida</h3>\n<ul>\n<li>imprima um inteiro de acordo com a opera\u00e7\u00e3o pedida.</li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>c</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">5.5</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">6</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>f</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">6.99</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">6</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>c</span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">6.99</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">7</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>r</span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">5.5</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">6</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>r</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">5.4</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<h2 id=\"dicas\">Dicas</h2>\n<h3 id=\"programando-em-c\">Programando em: C</h3>\n<ul>\n<li>\u00c9 dessa forma que \u00e9 realizada a cria\u00e7\u00e3o de uma fun\u00e7\u00e3o:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> round<span class=\"op\">(</span><span class=\"dt\">float</span> num<span class=\"op\">){</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span><span class=\"op\">;</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">float</span> num <span class=\"op\">=</span> <span class=\"fl\">1.1</span><span class=\"op\">;</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    round<span class=\"op\">(</span>num<span class=\"op\">);</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h3 id=\"programando-em-python\">Programando em: Python</h3>\n<ul>\n<li>\u00c9 dessa forma que \u00e9 realizada a cria\u00e7\u00e3o de uma fun\u00e7\u00e3o:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> <span class=\"bu\">round</span>(<span class=\"bu\">float</span> num):</span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>num <span class=\"op\">=</span> <span class=\"fl\">1.1</span><span class=\"op\">;</span></span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">round</span>(num)<span class=\"op\">;</span></span></code></pre></div>\n<h3 id=\"programando-em-typescript\">Programando em: TypeScript</h3>\n<ul>\n<li>\u00c9 dessa forma que \u00e9 realizada a cria\u00e7\u00e3o de uma fun\u00e7\u00e3o:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">function</span> <span class=\"fu\">round</span>(num<span class=\"op\">:</span> <span class=\"dt\">number</span>)<span class=\"op\">:</span> <span class=\"dt\">number</span>{</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span><span class=\"op\">;</span></span>\n<span id=\"cb9-3\"><a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb9-4\"><a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb9-5\"><a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> num <span class=\"op\">=</span> <span class=\"fl\">1.1</span><span class=\"op\">;</span></span>\n<span id=\"cb9-6\"><a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">round</span>(num)<span class=\"op\">;</span></span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\nc\n5.5\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nf\n6.99\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nc\n6.99\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nr\n5.5\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nr\n5.4\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\nc\n0.5\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\nf\n6.7\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\nf\n0.5\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\nr\n7.3\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\nr\n7.5\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\nf\n3.33\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 12\nr\n9.7\n======== EXPECT\n10\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
