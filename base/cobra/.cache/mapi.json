{
    "title": "@cobra: Jogo da cobrinha",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@cobra: Jogo da cobrinha</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Jogo da cobrinha</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/cobra/cover.jpg\" /></p>\n<h2>Contexto</h2>\n<p>Marivaldo, mais conhecido como Z\u00e9 da Carro\u00e7a, \u00e9 um agricultor bem sucedido do sert\u00e3o de Quixad\u00e1. S\u00f3 quando chove \u00e9 claro. Mas o problema de Marivaldo \u00e9 outro. Seu filho mais novo, Mavarildo, mais conhecido como Zezim da Carro\u00e7a, tem uma fixa\u00e7\u00e3o assustadora em bichos do mato, em especial cobras. O menino ajudado pelo seu irm\u00e3o Marivanio vara o cercado procurando uma cobra pra bater uma foto no celular do pai e postar nas redes sociais para seus seguidores. O menino entretanto combinou com o pai que se ele ganhasse um celular com joguinhos, ele pararia de tal estripulias. O pai, ent\u00e3o, por fraqueza, cedendo \u00e0 chantagem, comprou um nokia 3310 super conservado na feirinha do centro pela bagatela de uma raspa de rapadura com coco e mam\u00e3o num prato de coalhada.</p>\n<p>O primeiro jogo que Mavarildo instalou foi o jogo da cobrinha. Mas ele \u00e9 distra\u00eddo. No meio do jogo, olha pro horizonte e passa v\u00e1rios segundo pensando em cascav\u00e9is, p\u00edtons e outros bichos. Enquanto, isso, a cobrinha no seu celular vai andando, andando, andando, fazendo loops na tela.</p>\n<p>No jogo da cobrinha, quando a cabe\u00e7a passa do limite direito, ela reaparece do lado esquerdo. Quando passa do limite inferior, reaparece na parte de cima. Imagine o jogo apenas com a cabe\u00e7a da cobra. A tela \u00e9 quadrada, formada por N quadrados de largura e N quadrados de altura. O quadrado de posi\u00e7\u00e3o 0, 0 \u00e9 o mais em cima na esquerda. O X cresce para direita e o Y para baixo de acordo com a seguinte figura.</p>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/cobra/pontos.jpg\" /></p>\n<p>A cabe\u00e7a da cobra pode estar apontada para 4 poss\u00edveis dire\u00e7\u00f5es.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>U Up   (Cima)\nD Down (Baixo)\nL Left (Esquerda)\nR Right (Direita)\n</code></pre></div>\n<p>Mavarildo se distrai por S segundos. Imagine que cada segundo, a cabe\u00e7a da cobra se move 1 posi\u00e7\u00e3o. Voc\u00ea deve fazer um c\u00f3digo que calcule a posi\u00e7\u00e3o da cabe\u00e7a da cobra dada a dimens\u00e3o do tabuleiro N, a posi\u00e7\u00e3o inicial X, Y, a dire\u00e7\u00e3o da cabe\u00e7a C e a quantidade de segundos S que Mavarildo passa distra\u00eddo.</p>\n<h3>Entrada</h3>\n<ul>\n<li>A entrada consiste de 5 linhas:<ul>\n<li>\ud835\udc41: Um n\u00famero inteiro que indica a dimens\u00e3o do tabuleiro.</li>\n<li>\ud835\udc4b: Um n\u00famero inteiro representando a posi\u00e7\u00e3o inicial horizontal da cabe\u00e7a da cobra.</li>\n<li>\ud835\udc4c: Um n\u00famero inteiro representando a posi\u00e7\u00e3o inicial vertical da cabe\u00e7a da cobra.</li>\n<li>\ud835\udc36: Um caractere representando a dire\u00e7\u00e3o da cobra ('U' para cima, 'D' para baixo, 'L' para esquerda, 'R' para direita).</li>\n<li>\ud835\udc46: Um n\u00famero inteiro representando o n\u00famero de segundos de distra\u00e7\u00e3o.</li>\n</ul>\n</li>\n</ul>\n<h3>Sa\u00edda</h3>\n<ul>\n<li>O programa deve imprimir duas coordenadas inteiras \ud835\udc4b e \ud835\udc4c, indicando a posi\u00e7\u00e3o final da cabe\u00e7a.</li>\n</ul>\n<h3>Restri\u00e7\u00f5es</h3>\n<ul>\n<li>0 \u2264 N \u2264 1000</li>\n<li>0 \u2264 X \u2264 1000</li>\n<li>0 \u2264 Y \u2264 1000</li>\n<li>0 \u2264 C \u2264 1000</li>\n<li>0 \u2264 S \u2264 1000</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">10</span>\n<span class=\"mi\">4</span>\n<span class=\"mi\">3</span>\n<span class=\"n\">R</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">5</span> <span class=\"mi\">3</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">10</span>\n<span class=\"mi\">4</span>\n<span class=\"mi\">3</span>\n<span class=\"n\">R</span>\n<span class=\"mi\">8</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">3</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">10</span>\n<span class=\"mi\">4</span>\n<span class=\"mi\">5</span>\n<span class=\"n\">U</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">4</span> <span class=\"mi\">4</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<h2>Dicas</h2>\n<p>Ajuda\nA cobra se move uma unidade por segundo na dire\u00e7\u00e3o indicada. Quando ultrapassa o limite do tabuleiro, ela reaparece do outro lado. Voc\u00ea pode calcular a nova posi\u00e7\u00e3o usando opera\u00e7\u00f5es de m\u00f3dulo para garantir que a posi\u00e7\u00e3o fique dentro dos limites do tabuleiro.</p>\n<p>Voc\u00ea pode resolver o problema utilizando as seguintes opera\u00e7\u00f5es:</p>\n<ul>\n<li>Para mover para a direita ou esquerda, modifique a coordenada \ud835\udc4b e aplique o operador m\u00f3dulo \ud835\udc41 para \"dar a volta\" quando necess\u00e1rio.</li>\n<li>Para mover para cima ou para baixo, modifique a coordenada \ud835\udc4c e aplique o mesmo princ\u00edpio de m\u00f3dulo.</li>\n</ul>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n10\n4\n3\nR\n1\n======== EXPECT\n5 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n4\n3\nR\n8\n======== EXPECT\n2 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n4\n5\nU\n1\n======== EXPECT\n4 4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n20\n6\n12\nL\n21\n======== EXPECT\n5 12\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n7\n5\n6\nD\n13\n======== EXPECT\n5 5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n11\n9\n10\nR\n36\n======== EXPECT\n1 10\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n16\n8\n7\nL\n32\n======== EXPECT\n8 7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n15\n2\n13\nD\n35\n======== EXPECT\n2 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n14\n0\n10\nU\n19\n======== EXPECT\n0 5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n12\n1\n4\nD\n42\n======== EXPECT\n1 10\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n14\n11\n5\nD\n34\n======== EXPECT\n11 11\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
