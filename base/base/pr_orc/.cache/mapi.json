{
    "title": "@pr_orc: Batalha Orc",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@pr_orc: Batalha Orc</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n</head>\n<body>\n<h1 id=\"batalha-orc\">Batalha Orc</h1>\n<p>Esse arquivo define as regras da arena Orc. A arena Orc \u00e9 uma\nsimula\u00e7\u00e3o de um combate entre Orcs. Pode ser implementado em v\u00e1rios\nn\u00edveis.</p>\n<h2 id=\"fase-1-n\u00edvel-aprendiz.\">Fase 1: N\u00edvel Aprendiz.</h2>\n<p>In\u00edcio do jogo:</p>\n<ul>\n<li>O jogo come\u00e7a com 10 Orcs.</li>\n<li>Todos devem ser aleatoriamente iniciados com atributos\nvariados.</li>\n<li>Cada Orc s\u00f3 tem os atributos char id, int forca e int vida.</li>\n<li>Em uma rodada todos os Orcs atacam um por vez sequencialemente.</li>\n<li>Em seu turno, um Orc ataca aleatoriamente outro Orc do jogo que n\u00e3o\nele mesmo. O atacado sempre revida atacando o agressor com METADE da sua\nfor\u00e7a.</li>\n</ul>\n<p>Quando o round termina:</p>\n<ul>\n<li>Se um Orc ficar com vida negativa ou zero, ele \u00e9 removido da\nbatalha.</li>\n<li>Outro round reinicia at\u00e9 que s\u00f3 sobre um vencedor.</li>\n<li>Se no \u00faltimo round os dois Orcs morrerem, ent\u00e3o n\u00e3o houve\nvencedor.</li>\n<li>Voc\u00ea deve mostrar o Orc vencedor se houver algum.</li>\n</ul>\n<h2 id=\"fase-2-n\u00edvel-experiente.\">Fase 2: N\u00edvel Experiente.</h2>\n<p>Vamos criar algumas reviravoltas no nosso jogo.</p>\n<ul>\n<li>Os nomes dos Orcs devem aleat\u00f3rios e conter 4 letras. Deve iniciar\ncom mai\u00fasculo e as posi\u00e7\u00f5es pares devem ser vogais. Ex: Cona, Bifu,\nGori, Hijo.</li>\n<li>Um Orc tem dois novos atributos: revidar e raiva.</li>\n<li>Revidar define quantas vezes ele pode revidar em um round.</li>\n<li>Se um Orc \u00e9 atacado e n\u00e3o puder revidar, ele aumenta sua for\u00e7a\npermanentemente.</li>\n<li>O aumento da for\u00e7a \u00e9 dado pelo seu atributo raiva.</li>\n<li>Se o Orc atacado tiver ao menos 1 revidar, ele obrigatoriamente\nrevida gastando 1 revidar.</li>\n<li>A cada rodada revidar \u00e9 reiniciado para o valor m\u00e1ximo.</li>\n<li>Execute a luta todos contra todos e mostre o vencedor se houver\nalgum.</li>\n</ul>\n<h2 id=\"fase-3-n\u00edvel-avan\u00e7ado.\">Fase 3: N\u00edvel Avan\u00e7ado.</h2>\n<p>Vamos criar dois times:</p>\n<ul>\n<li>Orcs n\u00e3o lutam agora todos contra todos. Eles formam dois times de 4\nOrcs. Chamemos de times A e B.</li>\n<li>Os Orcs de um time atacam os Orcs de outro time. O lado A come\u00e7a\natacando.</li>\n<li>Alterne os Orcs entre os lados A e B at\u00e9 que todos ataquem.</li>\n<li>As regras de revidar e raiva ainda s\u00e3o v\u00e1lidas. Por\u00e9m agora, assim\nque a vida de um Orc fica negativa ele morre e sai do jogo, n\u00e3o apenas\nno fim do turno.</li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
