{
    "title": "@chute: Quem chega mais perto",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@chute: Quem chega mais perto</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"quem-chega-mais-perto\">Quem chega mais perto</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/chute/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"descri\u00e7\u00e3o\">Descri\u00e7\u00e3o</h2>\n<p>Pedro e Jo\u00e3o foram no S\u00edlvio Santos. O programa era aquele que o\nS\u00edlvio mostrava um produto do mercantil, ambos os participantes chutavam\no pre\u00e7o e a pessoa que chegasse mais pr\u00f3ximo do pre\u00e7o real ganhava.</p>\n<p>O objetivo do seu programa \u00e9 informar quem ganhou a disputa. Voc\u00ea\nreceber\u00e1 o valor do produto e o valor do chute de cada jogador. O\njogador que chegar mais perto ganha.</p>\n<p>Se ambos ficarem \u00e0 mesma distancia do valor real, ent\u00e3o houve\nempate.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>linha 1: o valor do produto.(valor inteiro entre 1 e 100)</li>\n<li>linha 2: o chute do Primeiro</li>\n<li>linha 3: o chute de Segundo</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>\u201cprimeiro\u201d se o chute do Primeiro for o mais pr\u00f3ximo do valor do\nproduto</li>\n<li>\u201csegundo\u201d se o chute do Segundo for o mais pr\u00f3ximo do valor do\nproduto</li>\n<li>\u201cempate\u201d caso ambos ficarem \u00e0 mesma distancia</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>primeiro</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>segundo</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">10</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">11</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">9</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>empate</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">20</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">21</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">22</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>primeiro</span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">20</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">21</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">21</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>empate</span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<h2 id=\"ajuda\">Ajuda</h2>\n<ul>\n<li>Ao ser realizado a diferen\u00e7a entre o chute de um jogador e o valor\ndo produto, o resultado pode ser negativo. Para eliminar esse resultado\nnegativo existe a fun\u00e7\u00e3o <code>abs</code>.</li>\n<li>A fun\u00e7\u00e3o <code>abs</code> retorna o valor absoluto de um n\u00famero, ou\nseja, o valor do n\u00famero sem sinal.</li>\n</ul>\n<p>Observa\u00e7\u00e3o</p>\n<ul>\n<li>Para ser utilizada a fun\u00e7\u00e3o <code>abs</code>, ela deve ser\nimportada. Segue as formas de importa\u00e7\u00e3o em algumas linguagens e como\nutilizar:</li>\n</ul>\n<p>Em <strong>C</strong>:</p>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;math.h&gt;</span><span class=\"pp\"> </span><span class=\"co\">//c</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>abs<span class=\"op\">(-</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">//retorna 3</span></span></code></pre></div>\n<p>Em <strong>C++</strong>:</p>\n<div class=\"sourceCode\" id=\"cb7\"><pre\nclass=\"sourceCode cpp\"><code class=\"sourceCode cpp\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;cmath&gt;</span><span class=\"pp\"> </span><span class=\"co\">//c++</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>abs<span class=\"op\">(-</span><span class=\"dv\">3</span><span class=\"op\">)</span> <span class=\"co\">//retorna 3</span></span></code></pre></div>\n<p>Em <strong>Python</strong>:</p>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#python</span></span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">abs</span>(<span class=\"op\">-</span><span class=\"dv\">3</span>) <span class=\"co\">#retorna 3</span></span></code></pre></div>\n<p>Em <strong>JavaScript</strong>:</p>\n<div class=\"sourceCode\" id=\"cb9\"><pre\nclass=\"sourceCode javascript\"><code class=\"sourceCode javascript\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//javascript </span></span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">Math</span><span class=\"op\">.</span><span class=\"fu\">abs</span>(<span class=\"op\">-</span><span class=\"dv\">3</span>) <span class=\"co\">//retorna 3</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n1\n2\n3\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n5\n4\n======== EXPECT\nsegundo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n11\n9\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n21\n22\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n21\n21\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n10\n11\n11\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n10\n12\n11\n======== EXPECT\nsegundo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n10\n11\n7\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n20\n22\n18\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n20\n21\n19\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
