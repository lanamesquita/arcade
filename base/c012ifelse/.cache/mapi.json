{
    "title": "@c012ifelse: @c012ifelse",
    "description": "# @c012ifelse\n\nDescri\u00e7\u00e3o no c\u00f3digo.\n\n[C\u00f3digo](https://github.com/qxcodefup/arcade/blob/master/base/c012ifelse/.cache/draft.c)\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n======== EXPECT\nA vari\u00e1vel x \u00e9 positiva.\nO n\u00famero 10 \u00e9 maior que 5.\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n======== EXPECT\nA vari\u00e1vel x \u00e9 positiva.\nO n\u00famero 10 \u00e9 maior que 5.\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "c": [
            {
                "name": "main.c",
                "contents": "//ADD!\n#include <stdio.h>\n\nint main() {\n    // Estruturas condicionais s\u00e3o usadas para tomar decis\u00f5es com base em condi\u00e7\u00f5es.\n    // Se a condi\u00e7\u00e3o dentro do if for verdadeira, o c\u00f3digo no bloco ser\u00e1 executado.\n\n    // Exemplo 1: Avaliando se um n\u00famero \u00e9 positivo, negativo ou zero.\n\n    // TODO: Corrija a sintaxe abaixo\n    //ACT!\n    // int x == 10;  // erro: o operador de atribui\u00e7\u00e3o deve ser usado\n    //DEL!\n    int x = 10;\n    //ADD!\n\n    if (x > 0) {\n        printf(\"A vari\u00e1vel x \u00e9 positiva.\\n\");\n    // } else if x < 0)  // erro: faltam par\u00eanteses e chaves na condi\u00e7\u00e3o //ACT!\n    } else if (x < 0) { //DEL!\n        printf(\"A vari\u00e1vel x \u00e9 negativa.\\n\");\n    } else {  // erro: fechamento incorreto da estrutura else if\n        printf(\"A vari\u00e1vel x \u00e9 zero.\\n\");\n    } //DEL!\n\n    // Exemplo 2: Comparando dois n\u00fameros\n\n    // TODO: Corrija a sintaxe abaixo\n    int a = 10;\n    int b = 5;\n\n    if (a > b) {\n        printf(\"O n\u00famero %d \u00e9 maior que %d.\\n\", a, b);\n    // else  // erro: falta o fechamento correto do if anterior //ACT!\n    } else { //DEL!\n        printf(\"O n\u00famero %d \u00e9 maior que %d.\\n\", b, a);\n    } //DEL!\n\n    return 0;\n}\n//ADD!\n",
                "type": "show"
            }
        ]
    }
}
