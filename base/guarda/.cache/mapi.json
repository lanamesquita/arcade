{
    "title": "@guarda: Retornando problemas primeiro",
    "description": "# Retornando problemas primeiro\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/guarda/cover.jpg)\n\n## Contexto\n\nImagine um sistema de acesso seguro onde \u00e9 necess\u00e1rio atender a v\u00e1rias condi\u00e7\u00f5es para conceder permiss\u00e3o. Por exemplo, ao tentar acessar uma informa\u00e7\u00e3o importante em um sistema, voc\u00ea precisa garantir que est\u00e1 conectado \u00e0 rede, autenticado e com permiss\u00f5es administrativas.\n\nImplemente um programa que verifique tr\u00eas condi\u00e7\u00f5es necess\u00e1rias para acessar um sistema: conex\u00e3o ao Wi-Fi, autentica\u00e7\u00e3o do login e permiss\u00f5es de administrador. O programa deve imprimir a mensagem de erro correspondente \u00e0 primeira condi\u00e7\u00e3o que falhar, ou indicar sucesso caso todas as condi\u00e7\u00f5es sejam atendidas. Utilize a l\u00f3gica das nega\u00e7\u00f5es para simplificar a estrutura das verifica\u00e7\u00f5es no c\u00f3digo, evitando aninhamentos desnecess\u00e1rios de `if else`.\n\n### Entrada\n\n- Tr\u00eas valores booleanos (0 ou 1):\n  - `wifi`: se est\u00e1 conectado ao Wi-Fi (1 para verdadeiro (`true`) e 0 para falso (`false`)).\n  - `login`: se o login foi feito (1 para verdadeiro (`true`) e 0 para falso (`false`)).\n  - `admin`: se o acesso \u00e9 de um administrador (1 para verdadeiro (`true`) e 0 para falso (`false`)).\n\n### Sa\u00edda\n\n- Se `wifi` for false: \"you must connect to wifi\".\n- Se `login` for false: \"you need to login first\".\n- Se `admin` for false: \"you must login as admin\".\n- Caso todos sejam verdadeiros: \"done\".\n\n## Testes\n\n``` py\n>>>>>>>> INSERT\n0\n0\n0\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n0\n1\n1\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n0\n0\n1\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n1\n0\n1\n======== EXPECT\nyou need to login first\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n1\n0\n0\n======== EXPECT\nyou need to login first\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n1\n1\n0\n======== EXPECT\nyou must to login as admin\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n1\n1\n1\n======== EXPECT\ndone\n<<<<<<<< FINISH\n\n```\n\n## Dicas\n\n### Programando em: C\n\n- \u00c9 poss\u00edvel utilizar verifica\u00e7\u00f5es simples para verificar cada condi\u00e7\u00e3o individualmente. Em valores booleanos, 0 \u00e9 considerado falso (`false`) e qualquer valor diferente de 0 \u00e9 verdadeiro (`true`). O s\u00edmbolo `!` indica a nega\u00e7\u00e3o de uma condi\u00e7\u00e3o, ou seja, espera-se que a condi\u00e7\u00e3o seja falsa:\n\n```c\nint main() {\n    if (!wifi) {\n    printf(\"you must connect to wifi\\n\");\n    }\n}\n```\n\n### Programando em: Python\n\n- Podemos utilizar verifica\u00e7\u00f5es simples para avaliar cada condi\u00e7\u00e3o individualmente. Valores num\u00e9ricos diferentes de zero s\u00e3o interpretados como True, enquanto zero \u00e9 considerado False. O operador not \u00e9 utilizado para negar uma condi\u00e7\u00e3o\n\n```py\nif not wifi:\n    print(\"you must connect to wifi\")\n```\n\n### Programando em: TypeScript\n\n- podemos utilizar verifica\u00e7\u00f5es simples para avaliar cada condi\u00e7\u00e3o individualmente. Valores num\u00e9ricos diferentes de zero s\u00e3o interpretados como `true` em contextos booleanos, enquanto zero \u00e9 considerado `false`. O operador `!` (exclama\u00e7\u00e3o) inverte o valor booleano de uma express\u00e3o.\n\n```ts\nif (!wifi) {\n    console.log(\"you must connect to wifi\");\n}\n```\n\n```ts\nif (!wifi) {\n    write(\"you must connect to wifi\");\n}\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n0\n0\n0\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n0\n1\n1\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n0\n0\n1\n======== EXPECT\nyou must connect to wifi\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n0\n1\n======== EXPECT\nyou need to login first\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n0\n0\n======== EXPECT\nyou need to login first\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n1\n0\n======== EXPECT\nyou must to login as admin\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n1\n1\n======== EXPECT\ndone\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
