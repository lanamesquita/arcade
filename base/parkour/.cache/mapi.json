{
    "title": "@parkour: Analisando vetores",
    "description": "# Analisando vetores\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/parkour/cover.jpg)\n\n## Contexto\n\nThaiquovisqui da Silva est\u00e1 desenvolvendo um jogo inspirado em Super Mario e Assassin's Creed.\n\nNo jogo, Mario se move em um cen\u00e1rio 2D. No entanto, ao inv\u00e9s de pular na cabe\u00e7a dos inimigos, ele os elimina com uma chave de fenda ou uma chave inglesa, lembrando que ele \u00e9 um encanador. O problema \u00e9 que o cen\u00e1rio cont\u00e9m algumas \u00e1reas dif\u00edceis para Mario se deslocar: blocos altos demais, nos quais ele n\u00e3o consegue subir, e blocos baixos demais, que podem ser perigosos.\n\nMario consegue subir apenas um bloco acima do n\u00edvel atual ou descer um bloco. Se a diferen\u00e7a entre os n\u00edveis for maior que um bloco, ele precisar\u00e1 realizar um movimento de parkour.\n\nUm movimento de parkour ocorre sempre que Mario precisa subir ou descer mais de um bloco para continuar avan\u00e7ando.\n\nO objetivo do programa \u00e9 calcular quantos movimentos de parkour Mario precisa fazer para atravessar todo o cen\u00e1rio.\n\nUm cen\u00e1rio \u00e9 representado por um vetor de n\u00fameros positivos, onde cada valor indica a altura de um bloco.\n\n**Ex:**\n\n- O vetor `[1, 1, 3, 3, 4, 6, 4, 2, 2, 1]` seria como o seguinte cen\u00e1rio:\n\n``` py\n_____#____\n_____#____\n____###___\n__#####___\n__#######_\n##########\n1133464221\n```\n\nNeste exemplo, Mario precisa realizar 4 movimentos de parkour: do bloco `1` para o bloco `3`, do bloco `4` para o bloco `6`, do bloco `6` para o bloco `4`, e do bloco `4` para o bloco `2`.\n\n### Entrada\n\n- linha 1: A Quantidade de elementos **'N'** do vetor (1 a 50).\n- linha 2: Um vetor de N inteiros positivos representando as alturas dos blocos.  \n\n### Sa\u00edda\n\n- Um n\u00famero inteiro representando a quantidade de movimentos de parkour necess\u00e1rios.\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n5\n1 2 1 2 3\n======== EXPECT\n0\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n6\n4 2 5 4 5 3\n======== EXPECT\n3\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n8\n1 3 5 7 6 5 4 3\n======== EXPECT\n3\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n14\n4 2 5 3 6 4 3 4 3 2 3 2 3 5\n======== EXPECT\n6\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n1 2 1 2 3\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n4 2 5 4 5 3\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n8\n1 3 5 7 6 5 4 3\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n14\n4 2 5 3 6 4 3 4 3 2 3 2 3 5\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
