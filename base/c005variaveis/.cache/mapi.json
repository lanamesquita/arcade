{
    "title": "@c005variaveis: @c005variaveis",
    "description": "# @c005variaveis\n\nDescri\u00e7\u00e3o no c\u00f3digo.\n\n[C\u00f3digo](https://github.com/qxcodefup/arcade/blob/master/base/c005variaveis/.cache/draft.c)\n\n[C\u00f3digo](https://github.com/qxcodefup/arcade/blob/master/base/c005variaveis/.cache/draft.c)\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n======== EXPECT\nIdade  : 20\nAltura : 1.75\nLetra  : A\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n======== EXPECT\nIdade  : 20\nAltura : 1.75\nLetra  : A\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "c": [
            {
                "name": "main.c",
                "contents": "//ADD!\n#include <stdio.h>\n\nint main() {\n    // O que s\u00e3o vari\u00e1veis?\n    // Em C, uma vari\u00e1vel \u00e9 um espa\u00e7o na mem\u00f3ria onde voc\u00ea pode armazenar um valor.\n    // Vari\u00e1veis possuem nomes para facilitar o acesso aos valores.\n    // Esses valores podem mudar durante a execu\u00e7\u00e3o do programa.\n\n    // O que s\u00e3o tipos?\n    // Em C, os tipos de dados determinam o tipo de valor que uma vari\u00e1vel pode armazenar.\n    // Existem v\u00e1rios tipos de dados, e cada um serve para armazenar diferentes formas de informa\u00e7\u00e3o.\n    // Por exemplo:\n    // - int: usado para armazenar n\u00fameros inteiros (ex: 10, 20, -5).\n    // - float: usado para armazenar n\u00fameros decimais de precis\u00e3o simples (ex: 1.75, 3.14).\n    // - char: usado para armazenar um \u00fanico caractere (ex: 'A', 'b').\n\n    // Como declarar vari\u00e1veis?\n    // Para declarar uma vari\u00e1vel, voc\u00ea precisa especificar seu tipo e dar um nome a ela.\n    // Aqui est\u00e1 um modelo gen\u00e9rico de como declarar vari\u00e1veis:\n    // tipo nome_da_variavel = valor_inicial;\n\n    // Exemplo:\n    // int idade = 30; // Declaramos uma vari\u00e1vel do tipo int com o nome \"idade\" e valor 30.\n\n    // Como imprimir vari\u00e1veis?\n    // Para imprimir vari\u00e1veis na tela, usamos a fun\u00e7\u00e3o printf.\n    // O printf permite que voc\u00ea insira vari\u00e1veis em uma string formatada,\n    // onde voc\u00ea usa especificadores de formato para indicar o tipo da vari\u00e1vel.\n    // Especificadores comuns:\n    // - %d: para imprimir vari\u00e1veis do tipo int (inteiro).\n    // - %f: para imprimir vari\u00e1veis do tipo float (decimal).\n    // - %c: para imprimir vari\u00e1veis do tipo char (caractere).\n    // Exemplo de uso:\n    // printf(\"Idade: %d\\n\", idade); // Substitua %d pelo especificador correto.\n\n    // Agora \u00e9 sua vez!\n\n    // TODO: Declare uma vari\u00e1vel int chamada \"idade\" e atribua a ela o valor 20.\n    // TODO: Declare uma vari\u00e1vel float chamada \"altura\" e atribua a ela o valor 1.75.\n    // TODO: Declare uma vari\u00e1vel char chamada \"letra\" e atribua a ela o caractere 'A'.\n    //DEL!\n    int idade = 20;\n    float altura = 1.75;\n    char letra = 'A';\n    //ADD!\n\n    // Imprima as vari\u00e1veis na tela utilizando printf e os especificadores corretos.\n    //ACT!\n    // printf(\"Idade  : ???\\n\", ???);  // TODO: Substitua ??? pelo especificador e vari\u00e1vel correta\n    // printf(\"Altura : ???\\n\", ???);  // TODO: Substitua ??? pelo especificador e vari\u00e1vel correta\n    // printf(\"Letra  : ???\\n\", ???);  // TODO: Substitua ??? pelo especificador e vari\u00e1vel correta\n    //DEL!\n    printf(\"Idade  : %d\\n\", idade);\n    printf(\"Altura : %f\\n\", altura);\n    printf(\"Letra  : %c\\n\", letra);\n    //ADD!\n\n    return 0;\n}\n",
                "type": "show"
            }
        ]
    }
}
