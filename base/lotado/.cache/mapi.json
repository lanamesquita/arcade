{
    "title": "@lotado: \u00d4nibus dos alunos",
    "description": "# \u00d4nibus dos alunos\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/lotado/cover.jpg)\n\n## Contexto\n\nQuem utiliza transporte p\u00fablico sabe o qu\u00e3o cheio um \u00f4nibus pode ficar, muitas vezes desafiando as leis da f\u00edsica. A quantidade de passageiros entrando e saindo \u00e9 t\u00e3o grande que o motorista nem consegue contar. Durante uma viagem, o motorista pediu sua ajuda, como estudante de TI, para criar um programa que o auxilie a decidir quando o \u00f4nibus est\u00e1 pronto para partir.\n\nDado um n\u00famero inteiro C, que representa a capacidade do \u00f4nibus prevista pela legisla\u00e7\u00e3o, o programa deve ler a movimenta\u00e7\u00e3o M (quantidade de pessoas que entram ou saem) e exibir o estado atual do \u00f4nibus. O programa encerra quando for a \"hora de partir\".\n\n### Entrada\n\n- Um n\u00famero inteiro **C** indicando a capacidade do \u00f4nibus.\n- Um n\u00famero inteiro **M**, positivo ou negativo, representando as movimenta\u00e7\u00f5es de entrada ou sa\u00edda de pessoas. Continue lendo at\u00e9 o \u00f4nibus partir.\n\n### Sa\u00edda\n\n- Para cada movimenta\u00e7\u00e3o, o programa deve imprimir:\n  - **\"vazio\"** - se o \u00f4nibus n\u00e3o tiver passageiros.\n  - **\"ainda cabe\"** - se houver passageiros, mas o \u00f4nibus n\u00e3o est\u00e1 lotado.\n  - **\"lotado\"** - se a quantidade de passageiros for igual \u00e0 capacidade do \u00f4nibus.\n  - **\"hora de partir\"** - se a quantidade de passageiros alcan\u00e7ar o dobro da capacidade, encerrando o programa.\n\n### Restri\u00e7\u00f5es\n\n- **C > 0**.\n- Um n\u00famero positivo representa a entrada de pessoas.\n- Um n\u00famero negativo representa a sa\u00edda de pessoas.\n- Nunca v\u00e3o sair mais pessoas do que tem no \u00f4nibus\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n5\n0\n3\n2\n4\n1\n======== EXPECT\nvazio\nainda cabe\nlotado\nlotado\nhora de partir\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n10\n10\n-10\n30\n======== EXPECT\nlotado\nvazio\nhora de partir\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n3\n1\n1\n1\n-3\n3\n3\n======== EXPECT\nainda cabe\nainda cabe\nlotado\nvazio\nlotado\nhora de partir\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n0\n3\n2\n4\n1\n======== EXPECT\nvazio\nainda cabe\nlotado\nlotado\nhora de partir\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n10\n-10\n30\n======== EXPECT\nlotado\nvazio\nhora de partir\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n1\n1\n1\n-3\n3\n3\n======== EXPECT\nainda cabe\nainda cabe\nlotado\nvazio\nlotado\nhora de partir\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
