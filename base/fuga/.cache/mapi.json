{
    "title": "Fuga em helic\u00f3ptero - OBI 2016",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>Fuga em helic\u00f3ptero - OBI 2016</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"fuga-em-helic\u00f3ptero---obi-2016\">Fuga em helic\u00f3ptero - OBI\n2016</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/fuga/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"contexto\">Contexto</h2>\n<p>Um fugitivo, um helic\u00f3ptero e um policial est\u00e3o em posi\u00e7\u00f5es distintas\nnuma pista circular, exatamente como a mostrada na figura ao lado, com\ndezesseis posi\u00e7\u00f5es numeradas de 0 a 15 em dire\u00e7\u00e3o anti-hor\u00e1ria.</p>\n<p>O helic\u00f3ptero e o policial ficam sempre parados. O objetivo do\nfugitivo \u00e9 chegar no helic\u00f3ptero sem passar pelo policial antes, claro.\nEle pode decidir correr na dire\u00e7\u00e3o hor\u00e1ria, ou na dire\u00e7\u00e3o\nanti-hor\u00e1ria.</p>\n<p>Neste problema, dadas as posi\u00e7\u00f5es do helic\u00f3ptero, do policial e do\nfugitivo, e a dire\u00e7\u00e3o em que o fugitivo decide correr, seu programa deve\ndizer se ele vai ou n\u00e3o conseguir fugir! Na figura, se o fugitivo\ndecidir correr na dire\u00e7\u00e3o hor\u00e1ria, ele consegue fugir; se decidir correr\nna dire\u00e7\u00e3o anti-hor\u00e1ria, ele vai ser preso antes de chegar no\nhelic\u00f3ptero!</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Quatro inteiros <strong>H</strong>, <strong>P</strong>,\n<strong>F</strong> e <strong>D</strong> em uma \u00fanica linha, que\nrepresentam:\n<ul>\n<li><strong>H:</strong> a posi\u00e7\u00e3o do helic\u00f3ptero (0 a 15),</li>\n<li><strong>P:</strong> a posi\u00e7\u00e3o do policial (0 a 15),</li>\n<li><strong>F:</strong> a posi\u00e7\u00e3o do fugitivo (0 a 15),</li>\n<li><strong>D:</strong> a dire\u00e7\u00e3o em que o fugitivo corre (-1 para\nhor\u00e1rio e 1 para anti-hor\u00e1ria).</li>\n</ul></li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Imprima <strong>\u201cS\u201d</strong> se o fugitivo conseguir chegar ao\nhelic\u00f3ptero, ou <strong>\u201cN\u201d</strong> caso contr\u00e1rio.</li>\n</ul>\n<h3 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h3>\n<ul>\n<li>Os inteiros <strong>H</strong>, <strong>P</strong> e <strong>F* s\u00e3o\ndistintos e est\u00e3o entre </strong>0** e <strong>15</strong>,\ninclusive.</li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span> <span class=\"dv\">14</span> <span class=\"dv\">7</span> <span class=\"op\">-</span><span class=\"dv\">1</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>S</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span> <span class=\"dv\">14</span> <span class=\"dv\">7</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>N</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">15</span> <span class=\"dv\">9</span> <span class=\"dv\">8</span> <span class=\"op\">-</span><span class=\"dv\">1</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>S</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">0</span> <span class=\"dv\">14</span> <span class=\"dv\">15</span> <span class=\"op\">-</span><span class=\"dv\">1</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>N</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n4 14 7 -1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4 14 7 1\n======== EXPECT\nN\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15 9 8 -1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n0 14 15 -1\n======== EXPECT\nN\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n8 12 11 -1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n12 6 13 -1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n10 6 13 -1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n15 3 13 1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n0 11 14 1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n2 4 13 1\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
