{
    "title": "@game10: Game10 - OBI 2017 - Fase 1 - Universit\u00e1rio",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@game10: Game10 - OBI 2017 - Fase 1 - Universit\u00e1rio</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Game10 - OBI 2017 - Fase 1 - Universit\u00e1rio</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/game10/cover.jpg\" /></p>\n<h2>Contexto</h2>\n<p>No princ\u00edpio dos anos 1980 surgiram nos col\u00e9gios os primeiros rel\u00f3gios de pulso digitais com joguinhos. Era uma febre entre os alunos e quem tinha um era muito popular na hora do recreio. Os joguinhos eram bem simples, mas muito legais. Um dos primeiros era o Game-10, no qual voc\u00ea controlava um avi\u00e3o que aparecia na parte direita do visor. Na parte esquerda aparecia um disco voador em qualquer uma de tr\u00eas posi\u00e7\u00f5es, aleatoriamente, e lan\u00e7ava um m\u00edssil. O objetivo do jogador era movimentar o avi\u00e3o verticalmente para que ficasse na frente do disco voador (na mesma linha horizontal, do lado direito) e atirar para interceptar o m\u00edssil antes que esse atingisse o avi\u00e3o.</p>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/game10/figura.jpg\" /></p>\n<p>Como o movimento do avi\u00e3o era feito com apenas um bot\u00e3o, s\u00f3 dava para movimentar em um sentido: ao apertar o bot\u00e3o sucessivas vezes, o avi\u00e3o se movia na sequ\u00eancia de posi\u00e7\u00f5es ... 1 \u2192 2 \u2192 3 \u2192 1 \u2192 2 \u2192 3 \u2192 1 ...</p>\n<p>Veja que, na situa\u00e7\u00e3o da figura, o jogador deveria apertar o bot\u00e3o apenas uma vez, para ir da posi\u00e7\u00e3o 1 para a posi\u00e7\u00e3o 2, e conseguir atirar e interceptar o m\u00edssil.</p>\n<p>Neste problema vamos considerar que existem N posi\u00e7\u00f5es e n\u00e3o apenas tr\u00eas. Dado o n\u00famero de posi\u00e7\u00f5es N, a posi\u00e7\u00e3o D na qual o disco voador aparece, e a posi\u00e7\u00e3o A onde est\u00e1 o avi\u00e3o, seu programa deve computar o n\u00famero m\u00ednimo de vezes que o jogador precisa apertar o bot\u00e3o para movimentar o avi\u00e3o at\u00e9 a mesma posi\u00e7\u00e3o do disco voador e poder atirar!</p>\n<h3>Entrada</h3>\n<ul>\n<li>A entrada \u00e9 composta por tr\u00eas linhas:<ul>\n<li>Um n\u00famero inteiro \ud835\udc41 representando o n\u00famero de posi\u00e7\u00f5es no jogo.</li>\n<li>Um n\u00famero inteiro \ud835\udc37 representando a posi\u00e7\u00e3o do disco voador.</li>\n<li>Um n\u00famero inteiro \ud835\udc34 representando a posi\u00e7\u00e3o atual do avi\u00e3o.</li>\n</ul>\n</li>\n</ul>\n<h3>Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve imprimir uma linha contendo um inteiro, o n\u00famero m\u00ednimo de vezes que o jogador deve apertar o bot\u00e3o para poder atirar.</li>\n</ul>\n<h3>Restri\u00e7\u00f5es</h3>\n<ul>\n<li>3 \u2264 N \u2264 100</li>\n<li>1 \u2264 D,A \u2264 N</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">3</span>\n<span class=\"mi\">2</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">20</span>\n<span class=\"mi\">8</span>\n<span class=\"mi\">13</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">15</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">3</span>\n<span class=\"mi\">2</span>\n<span class=\"mi\">2</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<h2>Dicas</h2>\n<p>O problema pode ser resolvido calculando a diferen\u00e7a c\u00edclica entre a posi\u00e7\u00e3o do disco voador \ud835\udc37 e a posi\u00e7\u00e3o do avi\u00e3o \ud835\udc34. A diferen\u00e7a pode ser obtida de duas maneiras:</p>\n<ul>\n<li>Movendo o avi\u00e3o de \ud835\udc34 at\u00e9 \ud835\udc37 diretamente.</li>\n<li>Dando uma volta completa no ciclo e contando quantos movimentos s\u00e3o necess\u00e1rios.</li>\n</ul>\n<p>O n\u00famero de movimentos ser\u00e1 o menor valor entre essas duas possibilidades.</p>\n<p>O n\u00famero de movimentos necess\u00e1rios para mover o avi\u00e3o pode ser calculado com a f\u00f3rmula:</p>\n<div class=\"arithmatex\">\\[movimentos = (D - A + N) \\mod N\\]</div>\n<p>Isso garante que a contagem dos movimentos seja sempre positiva e dentro do intervalo das posi\u00e7\u00f5es dispon\u00edveis.</p>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3\n2\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n8\n13\n======== EXPECT\n15\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n2\n2\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n3\n1\n3\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n5\n5\n2\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n7\n5\n7\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n10\n8\n1\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
