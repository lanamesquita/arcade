{
    "title": "@vacina: Ordenando vacinas e doentes",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@vacina: Ordenando vacinas e doentes</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"ordenando-vacinas-e-doentes\">Ordenando vacinas e doentes</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/vacina/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<p>by <span class=\"citation\" data-cites=\"wladmir\">@wladmir</span></p>\n<p>Um novo v\u00edrus mortal infectando grande popula\u00e7\u00e3o de um planeta. Um\nbrilhante cientista chamado Wladimir descobriu uma nova cepa de v\u00edrus\nque pode curar esta doen\u00e7a. A vacina produzida a partir desse v\u00edrus tem\nv\u00e1rias pot\u00eancias dependendo da contagem de c\u00e9lulas T. Uma pessoa \u00e9\ncurada somente se a contagem de c\u00e9lulas T no lote da vacina for maior do\nque a contagem de c\u00e9lulas T em uma pessoa. Um m\u00e9dico recebe um novo\nconjunto de relat\u00f3rios que cont\u00e9m a contagem de c\u00e9lulas T de cada\npaciente infectado, o laborat\u00f3rio QuixaVax armazena todas as vacinas que\no m\u00e9dico possui e sua contagem de c\u00e9lulas T. Voc\u00ea precisa determinar se\no m\u00e9dico pode salvar todos os pacientes com as vacinas que possui. O\nn\u00famero de vacinas e pacientes s\u00e3o iguais.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<p>A primeira linha cont\u00e9m o n\u00famero de vacinas N.</p>\n<p>A segunda linha cont\u00e9m N inteiros, representando a for\u00e7a das vacinas.\nA terceira linha cont\u00e9m N inteiros, que s\u00e3o a contagem m\u00e9dia dos\npacientes.</p>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<p>Imprima uma \u00fanica linha contendo Yes, se todos os pacientes podem ser\nsalvos e No, caso contr\u00e1rio.</p>\n<p>A for\u00e7a das vacinas e a contagem de c\u00e9lulas T de pacientes cabem em\num n\u00famero inteiro.</p>\n<h2 id=\"exemplo-de-entrada-1\">Exemplo de entrada 1</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">123</span> <span class=\"dv\">146</span> <span class=\"dv\">454</span> <span class=\"dv\">542</span> <span class=\"dv\">456</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">100</span> <span class=\"dv\">328</span> <span class=\"dv\">248</span> <span class=\"dv\">689</span> <span class=\"dv\">200</span></span></code></pre></div>\n<h2 id=\"exemplo-de-sa\u00edda-1\">Exemplo de Sa\u00edda 1</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>No</span></code></pre></div>\n<h2 id=\"explica\u00e7\u00e3o-1\">Explica\u00e7\u00e3o 1</h2>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n<p>A vacina 2 (contagem 146) n\u00e3o cura nenhum outro.</p>\n<h2 id=\"exemplo-de-entrada-2\">Exemplo de entrada 2</h2>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">123</span> <span class=\"dv\">690</span> <span class=\"dv\">454</span> <span class=\"dv\">150</span> <span class=\"dv\">456</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">100</span> <span class=\"dv\">328</span> <span class=\"dv\">248</span> <span class=\"dv\">689</span> <span class=\"dv\">145</span></span></code></pre></div>\n<h2 id=\"exemplo-de-sa\u00edda-2\">Exemplo de Sa\u00edda 2</h2>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>Yes</span></code></pre></div>\n<h2 id=\"explica\u00e7\u00e3o-2\">Explica\u00e7\u00e3o 2</h2>\n<ul>\n<li>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</li>\n<li>A vacina 2 (contagem 690) cura o paciente 4.</li>\n<li>A vacina 3 (contagem 454) cura o paciente 2.</li>\n<li>A vacina 4 (contagem 150) cura o paciente 5.</li>\n<li>A vacina 5 (contagem 150) cura o paciente 3.</li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n10 61 55 88 17\n15 76 21 73 19\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n123 146 454 542 456\n100 328 248 689 200\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n123 690 454 150 456\n100 328 248 689 145\n======== EXPECT\nYes\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
