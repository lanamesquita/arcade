{
    "title": "@josephus: Cabe\u00e7as v\u00e3o rolar",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@josephus: Cabe\u00e7as v\u00e3o rolar</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Cabe\u00e7as v\u00e3o rolar</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/josephus/cover.jpg\" /></p>\n<h2>Contexto</h2>\n<p>Um problema cl\u00e1ssico da matem\u00e1tica e da hist\u00f3ria \u00e9 o problema de Josephus. Nele, v\u00e1rias pessoas est\u00e3o disputando e apenas uma ser\u00e1 a vencedora.</p>\n<p>As pessoas est\u00e3o em uma fila circular e, a cada rodada, a pessoa que est\u00e1 com a espada mata a pessoa da frente e passa a espada para a pr\u00f3xima pessoa viva. O processo continua at\u00e9 que apenas uma pessoa esteja viva.</p>\n<p>Imagine N pessoas em c\u00edrculo, sendo que o primeiro tem o n\u00famero 1 na camisa e o \u00faltimo o n\u00famero N.  </p>\n<p>Em seguida, um n\u00famero X \u00e9 sorteado.</p>\n<p>A pessoa X sorteada pega a espada e decapita o companheiro da sua frente. Depois passa a espada para o pr\u00f3ximo vivo que decapita o colega da frente.</p>\n<p>Como se fosse removendo elementos intercaladamente em uma lista circular.</p>\n<p>Assim continue at\u00e9 que s\u00f3 sobre um.</p>\n<p>Highlander Mode On!  </p>\n<p><strong>Aten\u00e7\u00e3o:</strong> N\u00e3o fa\u00e7a isso em casa.  </p>\n<h3>Simula\u00e7\u00e3o</h3>\n<ul>\n<li>Cinco pessoas e \u00e9 sorteado o 3.  </li>\n</ul>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"o\">|</span> <span class=\"p\">:</span> <span class=\"n\">O</span> <span class=\"mi\">3</span> <span class=\"n\">mata</span> <span class=\"n\">o</span> <span class=\"mi\">4</span> <span class=\"n\">e</span> <span class=\"n\">a</span> <span class=\"n\">espada</span> <span class=\"n\">vai</span> <span class=\"n\">pro</span> <span class=\"mf\">5.</span>  \n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">5</span>   <span class=\"o\">|</span>  <span class=\"p\">:</span> <span class=\"n\">O</span> <span class=\"mi\">5</span> <span class=\"n\">mata</span> <span class=\"n\">o</span> <span class=\"mi\">1</span> <span class=\"n\">e</span> <span class=\"n\">a</span> <span class=\"n\">espada</span> <span class=\"n\">vai</span> <span class=\"n\">pro</span> <span class=\"mf\">2.</span>  \n<span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">5</span>     <span class=\"o\">|</span>   <span class=\"p\">:</span> <span class=\"n\">O</span> <span class=\"mi\">2</span> <span class=\"n\">mata</span> <span class=\"n\">o</span> <span class=\"mi\">3</span> <span class=\"n\">e</span> <span class=\"n\">a</span> <span class=\"n\">espada</span> <span class=\"n\">vai</span> <span class=\"n\">pro</span> <span class=\"mf\">5.</span>  \n<span class=\"mi\">2</span> <span class=\"mi\">5</span>       <span class=\"o\">|</span>    <span class=\"p\">:</span> <span class=\"n\">O</span> <span class=\"mi\">5</span> <span class=\"n\">mata</span> <span class=\"n\">o</span> <span class=\"mf\">2.</span>  \n<span class=\"mi\">5</span>         <span class=\"o\">|</span>     <span class=\"p\">:</span> <span class=\"n\">Sobra</span> <span class=\"n\">o</span> <span class=\"mi\">5</span>\n</code></pre></div>\n<h3>Entrada</h3>\n<ul>\n<li>Um n\u00famero inteiro <strong>N</strong> representando o n\u00famero de participantes (1 a 1000).</li>\n<li>Um n\u00famero inteiro **X representando o jogador que inicia com a espada (1 a N).</li>\n</ul>\n<h3>Sa\u00edda</h3>\n<ul>\n<li>O n\u00famero do jogador vencedor.</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">5</span> \n<span class=\"mi\">3</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">5</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">6</span>\n<span class=\"mi\">6</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5 \n3\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n6\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n5 3\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n2 1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n3 2\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n6 6\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n16 2\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
