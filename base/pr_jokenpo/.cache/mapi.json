{
    "title": "@pr_jokenpo: Jokenp\u00f4 - Melhor de 5",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@pr_jokenpo: Jokenp\u00f4 - Melhor de 5</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Jokenp\u00f4 - Melhor de 5</h1>\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/pr_jokenpo/cover.jpg\" /></p>\n<p>Este trabalho tem como objetivo que voc\u00ea desenvolva habilidades de\ndesenvolvimento de jogos, como contagem de pontos, jogadas aleat\u00f3rias,\nrounds e in\u00edcio e fim do game.</p>\n<p>Para realizar este trabalho voc\u00ea precisar\u00e1 lidar com entrada e sa\u00edda de\ninforma\u00e7\u00f5es e com gera\u00e7\u00e3o de dados aleat\u00f3rios.</p>\n<p>O jogo Jokenp\u00f4 - ou Pedra, Papel e Tesoura - \u00e9 jogado por dois jogadores\nem que ambos escolhem, aleatoriamente dentre as tr\u00eas op\u00e7\u00f5es, a sua\njogada e as exibem ao mesmo tempo vencendo aquele que a op\u00e7\u00e3o escolhida\nganha a do advers\u00e1rio, ou empatando quando ambos escolhem a mesma op\u00e7\u00e3o.\nAs regras definem as vit\u00f3rias do seguinte modo:</p>\n<ol>\n<li>\n<p><strong>Pedra</strong> ganha da <strong>tesoura</strong></p>\n</li>\n<li>\n<p><strong>Tesoura</strong> ganha do <strong>papel</strong></p>\n</li>\n<li>\n<p><strong>Papel</strong> ganha da <strong>pedra</strong></p>\n</li>\n</ol>\n<p>O jogo dever\u00e1 ser entre um jogador e o computador, em que este dever\u00e1\nfazer suas jogadas aleatoriamente ap\u00f3s as do jogador, que ent\u00e3o ser\u00e3o\ncomparadas, informado quem venceu e incrementado o n\u00famero de vit\u00f3rias do\natual vitorioso. Cada jogo ser\u00e1 dividido em 5 rounds, que dever\u00e1 ser\nexibido em qual estar\u00e1 no momento e ao fim o jogo dever\u00e1 perguntar se o\njogador deseja jogar novamente ou sair, sempre exibindo o n\u00famero de\nvit\u00f3rias de cada participante - jogador e computador.</p>\n<h2>Exemplo</h2>\n<p>Exemplo em execu\u00e7\u00e3o. Os s\u00edmbolos <code>&gt;&gt;</code> significam a entrada de dados do\nusu\u00e1rio.</p>\n<div class=\"language-text highlight\"><pre><span></span><code># JOKENP\u00d4 #\nVoc\u00ea: 0 | PC: 0\nRound: 1 / 5\n\n1 - Pedra\n2 - Papel\n3 - Tesoura\n&gt;&gt; 1\nVoc\u00ea jogou PEDRA e o PC PAPEL.\nO PC ganhou!\n\n# JOKENP\u00d4 #\nVoc\u00ea: 0 | PC: 1\nRound: 2 / 5\n\n1 - Pedra\n2 - Papel\n3 - Tesoura\n&gt;&gt; 3\nVoc\u00ea jogou TESOURA e o PC PAPEL.\nVoc\u00ea ganhou!\n\n# JOKENP\u00d4 #\nVoc\u00ea: 1 | PC: 1\nRound: 3 / 5\n\n1 - Pedra\n2 - Papel\n3 - Tesoura\n&gt;&gt; 2\nVoc\u00ea jogou PAPEL e o PC PAPEL.\nNingu\u00e9m ganhou!\n\n# JOKENP\u00d4 #\nVoc\u00ea 1 | PC: 1\nRound: 4 / 5\n\n1 - Pedra\n2 - Papel\n3 - Tesoura\n&gt;&gt;\n\n.\n.\n.\n\n# JOKENP\u00d4 #\nVoc\u00ea: 2 | PC: 1\nRound: 5 / 5\n\n1 - Pedra\n2 - Papel\n3 - Tesoura\n&gt;&gt; 3\nVoc\u00ea jogou TESOURA e o PC PAPEL.\nVoc\u00ea ganhou!\n\nPLACAR FINAL:\nVoc\u00ea: 3 | PC: 1\n\nJOGAR NOVAMENTE?\n1 - Sim\n0 - Sair\n</code></pre></div>\n<h2>Dicas</h2>\n<p>Voc\u00ea pode fazer o computador gerar n\u00fameros entre 0 e 2 e utilizar esses n\u00fameros como as jogadas.</p>\n<ul>\n<li>0: pedra</li>\n<li>1: papel</li>\n<li>2: tesoura</li>\n</ul>\n<h2>Jokenp\u00f4 V2</h2>\n<h3>Pedra, Papel, Tesoura, Lagarto e Spock</h3>\n<p><img alt=\"spock\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/pr_jokenpo/spock.jpg\" /></p>\n<p>Nesta segunda vers\u00e3o voc\u00ea dever\u00e1 implementar o modo do jogo mais recente\nem que duas novas op\u00e7\u00f5es foram adicionadas, <strong>Lagarto e Spock</strong>,\nconforme as regras cl\u00e1ssicas e as adicionais:</p>\n<ol>\n<li><strong>Tesoura</strong> ganha do <strong>papel</strong></li>\n<li><strong>Papel</strong> ganha da <strong>pedra</strong></li>\n<li><strong>Pedra</strong> ganha do <strong>lagarto</strong></li>\n<li><strong>Lagarto</strong> ganha do <strong>Spock</strong></li>\n<li><strong>Spock</strong> ganha da <strong>tesoura</strong></li>\n<li><strong>Tesoura</strong> ganha do <strong>lagarto</strong></li>\n<li><strong>Lagarto</strong> ganha do <strong>papel</strong></li>\n<li><strong>Papel</strong> ganha do <strong>Spock</strong></li>\n<li><strong>Spock</strong> ganha da <strong>pedra</strong></li>\n<li><strong>Pedra</strong> ganha da <strong>tesoura</strong></li>\n</ol>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
