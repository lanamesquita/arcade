{
    "title": "@cartas: - Transformando n\u00fameros em letras",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@cartas: - Transformando n\u00fameros em letras</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"transformando-n\u00fameros-em-letras\">- Transformando n\u00fameros em\nletras</h1>\n<h2 id=\"imprimir-vetor-formatado\">Imprimir vetor formatado</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/cartas/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"contexto\">Contexto</h2>\n<p>Voc\u00ea est\u00e1 jogando um jogo de cartas com seus amigos e, ao olhar para\nsua m\u00e3o, percebe que os n\u00fameros das cartas est\u00e3o codificados. Querendo\nsaber quais cartas realmente possui, voc\u00ea decide converter esses n\u00fameros\nem letras e ver sua m\u00e3o de forma clara.</p>\n<p>No jogo:</p>\n<ul>\n<li>O n\u00famero <strong>1</strong> corresponde \u00e0 carta <strong>\u201cA\u201d</strong>\n(\u00c1s).</li>\n<li>Os n\u00fameros <strong>11</strong>, <strong>12</strong> e\n<strong>13</strong> correspondem \u00e0s cartas <strong>\u201cJ\u201d</strong>,\n<strong>\u201cQ\u201d</strong> e <strong>\u201cK\u201d</strong> (Valete, Rainha e Rei),\nrespectivamente.</li>\n<li>Os outros n\u00fameros permanecem os mesmos.</li>\n</ul>\n<p>Leia um vetor contendo a m\u00e3o de cartas de um jogador e mostre as\ncartas para o usu\u00e1rio de forma leg\u00edvel, substituindo os n\u00fameros\nespeciais <strong>(1, 11, 12, 13)</strong> por suas respectivas\nletras.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha cont\u00e9m um n\u00famero inteiro <strong>N</strong> (0 \u2264 N\n\u2264 13) representando a quantidade de cartas na m\u00e3o.</li>\n<li>A segunda linha cont\u00e9m <strong>N</strong> n\u00fameros inteiros\nrepresentando as cartas do jogador, separados por espa\u00e7o. Os valores\nest\u00e3o entre <strong>1</strong> e <strong>13</strong>.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Imprima o vetor das cartas formatado entre colchetes\n<code>[ ]</code>, onde cada carta \u00e9 separada por uma v\u00edrgula e um\nespa\u00e7o. Substitua os n\u00fameros <strong>1</strong>, <strong>11</strong>,\n<strong>12</strong> e <strong>13</strong> por <strong>\u201cA\u201d</strong>,\n<strong>\u201cJ\u201d</strong>, <strong>\u201cQ\u201d</strong> e <strong>\u201cK\u201d</strong>,\nrespectivamente.</li>\n</ul>\n<h3 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h3>\n<ul>\n<li>O n\u00famero de cartas <strong>N</strong> estar\u00e1 entre 0 e 13.</li>\n<li>Os valores das cartas estar\u00e3o entre 1 e 13.</li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">0</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>[]</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">13</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span> <span class=\"dv\">2</span> <span class=\"dv\">3</span> <span class=\"dv\">4</span> <span class=\"dv\">5</span> <span class=\"dv\">6</span> <span class=\"dv\">7</span> <span class=\"dv\">8</span> <span class=\"dv\">9</span> <span class=\"dv\">10</span> <span class=\"dv\">11</span> <span class=\"dv\">12</span> <span class=\"dv\">13</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>[A, <span class=\"dv\">2</span>, <span class=\"dv\">3</span>, <span class=\"dv\">4</span>, <span class=\"dv\">5</span>, <span class=\"dv\">6</span>, <span class=\"dv\">7</span>, <span class=\"dv\">8</span>, <span class=\"dv\">9</span>, <span class=\"dv\">10</span>, J, Q, K]</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">3</span> <span class=\"dv\">13</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>[A, A, <span class=\"dv\">3</span>, K]</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">6</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span> <span class=\"dv\">12</span> <span class=\"dv\">13</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">10</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>[A, Q, K, A, A, <span class=\"dv\">10</span>]</span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">6</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">10</span> <span class=\"dv\">10</span> <span class=\"dv\">2</span> <span class=\"dv\">2</span> <span class=\"dv\">11</span> <span class=\"dv\">1</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>[<span class=\"dv\">10</span>, <span class=\"dv\">10</span>, <span class=\"dv\">2</span>, <span class=\"dv\">2</span>, J, A]</span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n0\n======== EXPECT\n[]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n======== EXPECT\n[A, 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n1 1 3 13\n======== EXPECT\n[A, A, 3, K]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n1 12 13 1 1 10\n======== EXPECT\n[A, Q, K, A, A, 10]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n10 10 2 2 11 1\n======== EXPECT\n[10, 10, 2, 2, J, A]\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
