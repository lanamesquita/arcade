{
    "title": "@drone: Dronede Entrega - OBI 2017 - Fase 1",
    "description": "# Dronede Entrega - OBI 2017 - Fase 1\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/drone/cover.jpg)\n\n## Contexto\n\nA loja do Par\u00e1, especializada em vendas pela internet, est\u00e1 desenvolvendo drones para entrega de caixas com as compras dos clientes. Cada caixa tem a forma de um paralelep\u00edpedo reto ret\u00e2ngulo (ou seja, no formato de um tijolo).\n\nO drone entregar\u00e1 uma caixa de cada vez, e colocar\u00e1 a caixa diretamente dentro da casa do cliente, atrav\u00e9s de uma janela. Todas as janelas dos clientes t\u00eam o formato retangular e est\u00e3o sempre totalmente abertas. O drone tem um aplicativo de vis\u00e3o computacional que calcula exatamente as dimens\u00f5es H e L da janela. O drone consegue colocar a caixa atrav\u00e9s da janela somente quando uma das faces da caixa est\u00e1 paralela \u00e0 janela, mas consegue virar e rotacionar a caixa antes de pass\u00e1-la pela janela.\n\nO aplicativo de controle do drone est\u00e1 quase pronto, mas falta um pequeno detalhe: um programa que, dadas as dimens\u00f5es da maior janela do cliente e as dimens\u00f5es da caixa que deve ser entregue, determine se o drone vai ser capaz de entregar a compra (pela janela) ou se a compra ter\u00e1 que ser entregue por meios normais.\n\n### Entrada\n\n- As primeiras tr\u00eas linhas cont\u00eam os valores inteiros **A**, **B**, e **C**, que representam as dimens\u00f5es da caixa, em cent\u00edmetros.\n- As \u00faltimas duas linhas cont\u00eam os valores inteiros **H** e **L**, que representam a altura e largura da janela, em cent\u00edmetros\n\n### Sa\u00edda\n\n- O programa deve imprimir \"**S**\" se a caixa passa pela janela, ou \"**N**\" se a caixa n\u00e3o passa.\n\n### Restri\u00e7\u00f5es\n\n- 1 \u2264 A, B, C \u2264 100\n- 1 \u2264 H, L \u2264 100\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n30\n50\n80\n80\n60\n======== EXPECT\nS\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n75\n100\n50\n100\n30\n======== EXPECT\nN\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n20\n22\n5\n20\n10\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n```\n\n## Dicas\n\nTeste todas as poss\u00edveis combina\u00e7\u00f5es das dimens\u00f5es da caixa contra a janela. A caixa poder\u00e1 passar se, ao girar suas faces, uma combina\u00e7\u00e3o de duas dimens\u00f5es se encaixar dentro das dimens\u00f5es da janela. Em outras palavras, tente encaixar cada uma das faces do paralelep\u00edpedo na janela e verifique se ela passa.\n\nAqui est\u00e3o as 6 combina\u00e7\u00f5es que voc\u00ea pode testar:\n\n- A e B passam pela janela.\n- A e C passam pela janela.\n- B e A passam pela janela.\n- B e C passam pela janela.\n- C e A passam pela janela.\n- C e B passam pela janela.\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n30\n50\n80\n80\n60\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n75\n100\n50\n100\n30\n======== EXPECT\nN\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n22\n5\n20\n10\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n1\n1\n1\n40\n40\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n80\n80\n80\n10\n10\n======== EXPECT\nN\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n2\n2\n2\n90\n40\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n10\n20\n30\n50\n60\n======== EXPECT\nS\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
