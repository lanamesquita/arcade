{
    "title": "@linha: Leitura de inteiros",
    "description": "# Leitura de inteiros\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/linha/cover.jpg)\n\n[Explica\u00e7\u00e3o](https://youtu.be/r44oGh6gVU0)\n\nVoc\u00ea n\u00e3o precisa saber o tamanho do vetor quando for ler uma linha com dados. Em python o comando `input().split(\" \")` j\u00e1 retorna o vetor dividido. Em `c`e `c++` voc\u00ea tem algumas formas de fazer isso.\n\nEm `c` voc\u00ea pode ler os dados e o `char` seguido a esse dado. Se utilizar `scanf(\"%d%c\"`, sem o espa\u00e7o antes do`%c` voc\u00ea est\u00e1 informando ao `scanf` para n\u00e3o ignorar os _whitespaces_. O c\u00f3digo baixo vai em cada rodada do la\u00e7o pegar o inteiro e o char sequencial a ele. Se esse char for um `\\n` significa que a linha acabou.\n\n```c\n#include <stdio.h>\nint main(){\n    int value;\n    char c;\n    do{\n        scanf(\"%d%c\", &value, &c);\n        printf(\"%d \", value);\n    }while(c != '\\n');\n    print(\"\\n\");\n}\n```\n\nAgora tente adaptar esse c\u00f3digo para carregar v\u00e1rios inteiros em um vetor e depois imprimir o vetor ao contr\u00e1rio.\n\n- Entrada:\n  - N inteiros numa mesma linha, (1< N < 30).\n- Sa\u00edda:\n  - O vetor impresso ao contr\u00e1rio.\n\n``` py\n>>>>>>>> INSERT\n19 12 32 11 17 15\n======== EXPECT\n[ 15 17 11 32 12 19 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n15\n======== EXPECT\n[ 15 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n15 12\n======== EXPECT\n[ 12 15 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n15 17 11\n======== EXPECT\n[ 11 17 15 ]\n<<<<<<<< FINISH\n\n```\n\n[Resolu\u00e7\u00e3o](https://youtu.be/r44oGh6gVU0)\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n19 12 32 11 17 15\n======== EXPECT\n[ 15 17 11 32 12 19 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15\n======== EXPECT\n[ 15 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15 12\n======== EXPECT\n[ 12 15 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15 17 11\n======== EXPECT\n[ 11 17 15 ]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
