{
    "title": "@troco: Calculando troco",
    "description": "# Calculando troco\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/troco/cover.jpg)\n\n## Contexto\n\nImagine que voc\u00ea trabalha em uma loja e precisa calcular o troco para os clientes. Seu objetivo \u00e9 sempre entregar a menor quantidade poss\u00edvel de c\u00e9dulas e moedas, priorizando sempre os valores maiores. Para trocos que envolvem centavos, isso pode ser um pouco mais complexo. Al\u00e9m disso, se o valor do troco n\u00e3o puder ser composto exato com as c\u00e9dulas e moedas dispon\u00edveis, o programa dever\u00e1 informar quanto falta.\n\nDesenvolva um programa que calcule o troco em reais e centavos, utilizando as c\u00e9dulas e moedas do Brasil. O programa deve mostrar a combina\u00e7\u00e3o de c\u00e9dulas e moedas que resulta na menor quantidade de itens. Se houver uma pequena quantia que n\u00e3o possa ser paga **(inferior a R$ 0,05)**, informe o valor restante.\n\n### C\u00e9dulas e moedas dispon\u00edveis\n\n- C\u00e9dulas: R$ 100, R$ 50, R$ 20, R$ 10, R$ 5, R$ 2\n- Moedas: R$ 1, R$ 0,50, R$ 0,25, R$ 0,10, R$ 0,05\n\n**Ex:** 453 reais e 83 centavos.\n\n```py\n4 de 100.00\n1 de 50.00\n1 de 2.00\n1 de 1.00\n1 de 0.50\n1 de 0.25\n1 de 0.05\nFalta 0.03\n```\n\nN\u00e3o use `ifs` e `elses`, fa\u00e7a um `vetor` de op\u00e7\u00f5es de troco.\n\n### Entrada\n\n- Um valor `float` representando o valor total do troco.\n\n### Sa\u00edda\n\n- A combina\u00e7\u00e3o de c\u00e9dulas e moedas que totaliza o valor do troco, **com a menor quantidade de itens.**\n- Se houver valor residual inferior a **R$ 0,05**, imprima o valor restante.\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n77.00\n======== EXPECT\n1 de 50.00\n1 de 20.00\n1 de 5.00\n1 de 2.00\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n19.00\n======== EXPECT\n1 de 10.00\n1 de 5.00\n2 de 2.00\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n17.39\n======== EXPECT\n1 de 10.00\n1 de 5.00\n1 de 2.00\n1 de 0.25\n1 de 0.10\nFalta 0.04\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n57.01\n======== EXPECT\n1 de 50.00\n1 de 5.00\n1 de 2.00\nFalta 0.01\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n377.76\n======== EXPECT\n3 de 100.00\n1 de 50.00\n1 de 20.00\n1 de 5.00\n1 de 2.00\n1 de 0.50\n1 de 0.25\nFalta 0.01\n<<<<<<<< FINISH\n```\n\n## Dicas\n\n- Utilize um vetor para representar as c\u00e9dulas e moedas dispon\u00edveis em ordem decrescente de valor.\n- Para cada valor do vetor, divida o troco atual e registre quantas c\u00e9dulas ou moedas daquele valor podem ser usadas.\n- Calcule o restante e continue o processo at\u00e9 o final.\n- Para lidar com o valor residual (inferior a R$ 0,05), utilize uma compara\u00e7\u00e3o final para verificar se ainda resta algo a ser pago.\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n77.00\n======== EXPECT\n1 de 50.00\n1 de 20.00\n1 de 5.00\n1 de 2.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n19.00\n======== EXPECT\n1 de 10.00\n1 de 5.00\n2 de 2.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n17.39\n======== EXPECT\n1 de 10.00\n1 de 5.00\n1 de 2.00\n1 de 0.25\n1 de 0.10\nFalta 0.04\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n57.01\n======== EXPECT\n1 de 50.00\n1 de 5.00\n1 de 2.00\nFalta 0.01\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n377.76\n======== EXPECT\n3 de 100.00\n1 de 50.00\n1 de 20.00\n1 de 5.00\n1 de 2.00\n1 de 0.50\n1 de 0.25\nFalta 0.01\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
