{
    "title": "Vivo ou Morto - OBI 2005",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>Vivo ou Morto - OBI 2005</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"vivo-ou-morto---obi-2005\">Vivo ou Morto - OBI 2005</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/vivo/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Toda crianc\u0327a certamente ja\u0301 brincou de \u201cvivo ou morto\u201d. A brincadeira\ne\u0301 dirigida por um \u201cchefe\u201d (um adulto), que comanda dois ou mais\nparticipantes (crianc\u0327as). A brincadeira e\u0301 composta de rodadas.</p>\n<p>No in\u0131\u0301cio, os participantes sa\u0303o organizados pelo chefe em fila u\u0301nica.\nA cada rodada o chefe grita \u201cvivo\u201d ou \u201cmorto\u201d e todos os participantes\ntentam seguir sua ordem, levantando-se ao ouvir a palavra \u201cvivo\u201d ou\nabaixando-se ao ouvir a palavra \u201cmorto\u201d. Um participante que na\u0303o segue a\nordem do chefe e\u0301 eliminado, deixando o seu lugar na fila.</p>\n<p>Os participantes remanescentes agrupam-se novamente em fila u\u0301nica,\npreenchendo as posic\u0327o\u0303es dos participantes eliminados, mas mantendo suas\nposic\u0327o\u0303es relativas. O jogo continua ate\u0301 que uma rodada seja composta por\nexatamente um participante. Tal participante e\u0301 dito o vencedor do\njogo.</p>\n<p>Por exemplo, considere que a brincadeira inicie com cinco\nparticipantes, identificados por nu\u0301meros inteiros de 1 a 5, e que o\nchefe organize a fila na ordem 3 \u2192 2 \u2192 1 \u2192 4 \u2192 5. Se na primeira rodada\nforem eliminados os participantes 2 e 4, a fila da segunda rodada sera\u0301\nformada por 3 \u2192 1 \u2192 5; se na segunda rodada for eliminado o participante\n1, a fila da terceira rodada sera\u0301 formada por 3 \u2192 5. Se na terceira\nrodada o participante 3 for eliminado, o vencedor da brincadeira sera\u0301 o\nparticipante 5.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Sua tarefa e\u0301 escrever um programa que determine o vencedor de uma\npartida de \u201cvivo ou morto\u201d, a partir da informac\u0327a\u0303o das ordens dadas pelo\nchefe e das ac\u0327o\u0303es executadas pelos participantes em cada rodada.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada e\u0301 constitu\u0131\u0301da de va\u0301rios casos de teste, cada um\nrepresentando uma partida. A primeira linha de um caso de teste conte\u0301m\ndois nu\u0301meros inteiros P e R indicando respectivamente a quantidade\ninicial de participantes (2 \u2264 P \u2264 100) e quantidade de rodadas da\npartida (1 \u2264 R \u2264 100).</li>\n<li>Os participantes sa\u0303o identificados por nu\u0301meros de 1 a P . A segunda\nlinha de um caso de teste descreve a fila organizada pelo chefe,\ncontendo P nu\u0301meros inteiros distintos x1 , x2 , . . . xP , onde x1\nrepresenta o identificador do participante no primeiro lugar na fila, x2\nrepresenta o identificador do participante no segundo lugar na fila, e\nassim por diante (1 \u2264 xi \u2264 P ).</li>\n<li>Cada uma das R linhas seguintes representa uma rodada, contendo um\nnu\u0301mero inteiro inteiro N indicando o nu\u0301mero de participantes da rodada\n(2 \u2264 N \u2264 P ), um nu\u0301mero inteiro inteiro J representando a ordem dada\npelo chefe (0 \u2264 J \u2264 1) e N nu\u0301meros inteiros Ai representando a ac\u0327a\u0303o do\nparticipante colocado na i-e\u0301sima posic\u0327a\u0303o na fila (0 \u2264 Ai \u2264 1).</li>\n<li>Ordens e ac\u0327o\u0303es \u201cvivo\u201d sa\u0303o representadas pelo valor 1, ordens e ac\u0327o\u0303es\n\u201cmorto\u201d pelo valor zero. Cada partida tem exatamente um vencedor,\ndeterminado somente na u\u0301ltima rodada fornecida no caso de teste\ncorrespondente. O final da entrada e\u0301 indicado por P = R = 0.</li>\n<li>A entrada deve ser lida do dispositivo de entrada padra\u0303o\n(normalmente o teclado).</li>\n</ul>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<ul>\n<li>Para cada caso de teste seu programa deve produzir tre\u0302s linhas. A\nprimeira identifica o conjunto de teste no formato \u201cTeste n\u201d, onde n e\u0301\nnumerado a partir de 1. A segunda linha deve conter o identificador do\nvencedor. A terceira linha deve ser deixada em branco. A grafia mostrada\nno Exemplo de Sa\u0131\u0301da, abaixo, deve ser seguida rigorosamente.<br />\n</li>\n<li>A sa\u0131\u0301da deve ser escrita no dispositivo de sa\u0131\u0301da padra\u0303o (normalmente\na tela).</li>\n</ul>\n<p>\fOlimp\u0131\u0301ada Brasileira de Informa\u0301tica - OBI2005 - Modalidade\nProgramac\u0327a\u0303o N\u0131\u0301vel 2</p>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> \u2264 P \u2264 <span class=\"dv\">100</span> (P <span class=\"op\">=</span> <span class=\"dv\">0</span> apenas para indicar o fim da entrada)  </span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span> \u2264 R \u2264 <span class=\"dv\">100</span> (R <span class=\"op\">=</span> <span class=\"dv\">0</span> apenas para indicar o fim da entrada)  </span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span> \u2264 xi \u2264 P , para <span class=\"dv\">1</span> \u2264 i \u2264 P  </span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span>\u2264N \u2264P  </span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">0</span>\u2264J \u2264<span class=\"dv\">1</span>  </span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">0</span> \u2264 Ai \u2264 <span class=\"dv\">1</span>, para <span class=\"dv\">1</span> \u2264 i \u2264 N</span></code></pre></div>\n<h2 id=\"exemplos\">Exemplos</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT <span class=\"dv\">0</span><span class=\"er\">1</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">4</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span> <span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">4</span> <span class=\"dv\">5</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">4</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span> <span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">4</span> <span class=\"dv\">5</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">2</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span> <span class=\"dv\">1</span> <span class=\"dv\">1</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">0</span> <span class=\"dv\">0</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>Teste <span class=\"dv\">1</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>Teste <span class=\"dv\">2</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>Teste <span class=\"dv\">3</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">2</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 0 1\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 1 0\n2 2\n2 1\n2 1 1 1\n2 1 1 0\n0 0\n======== EXPECT\nTeste 1\n5\nTeste 2\n3\nTeste 3\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n10 7\n5 6 1 8 10 4 2 7 9 3\n10 1 1 1 0 1 1 1 1 1 1 1\n9 1 1 1 0 1 1 1 1 1 0\n7 1 0 0 1 1 1 1 1\n5 1 1 0 1 1 1\n4 1 1 1 1 1\n4 0 0 1 0 0\n3 1 1 0 0\n8 8\n6 2 3 4 8 1 5 7\n8 1 1 0 1 1 1 1 1 1\n7 1 1 1 1 1 1 1 1\n7 0 0 0 0 0 0 0 0\n7 1 1 1 1 1 1 1 1\n7 1 1 0 1 1 1 1 1\n6 1 1 1 0 0 1 1\n4 0 0 0 0 0\n4 1 0 0 0 1\n10 10\n3 5 1 7 4 8 2 9 10 6\n10 1 1 1 1 1 1 1 1 1 1 1\n10 0 0 0 0 0 0 0 1 0 0 0\n9 0 0 0 0 0 0 0 0 1 0\n8 1 1 1 1 1 1 0 0 1\n6 1 1 1 1 1 1 1\n6 0 0 0 0 1 0 0\n5 0 0 0 0 0 0\n5 0 1 0 0 0 0\n4 0 0 0 0 0\n4 1 0 1 0 0\n0 0\n======== EXPECT\nTeste 1\n10\nTeste 2\n7\nTeste 3\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3 6\n1 2 3\n3 0 0 0 0\n3 0 0 0 0\n3 0 0 0 0\n3 1 0 1 1\n2 0 0 1\n1 0 0\n3 10\n3 1 2\n3 1 1 1 1\n3 0 0 0 1\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 1 0 1\n1 0 0\n1 0 0\n5 4\n5 2 3 4 1\n5 0 0 0 0 0 0\n5 1 1 1 1 1 0\n4 1 0 1 1 0\n2 0 1 0\n10 6\n1 8 4 3 5 6 10 2 7 9\n10 0 0 0 0 1 1 0 1 0 0 0\n7 1 1 1 0 1 0 0 1\n4 0 0 1 0 0\n3 1 1 1 1\n3 0 0 1 0\n2 0 1 0\n5 4\n3 5 4 2 1\n5 0 0 0 0 0 0\n5 1 0 1 1 0 1\n3 0 0 0 0\n3 0 0 1 1\n10 7\n10 3 6 8 2 9 1 4 7 5\n10 0 0 0 0 1 0 0 0 0 1 0\n8 0 0 0 0 1 0 0 0 0\n7 0 1 1 1 0 1 0 0\n3 1 0 0 1\n1 0 0\n1 0 0\n1 0 0\n8 3\n5 3 4 2 1 7 6 8\n8 0 0 0 0 0 1 0 0 0\n7 1 0 0 1 1 1 1 1\n5 0 1 1 1 0 1\n9 6\n4 6 7 8 2 9 1 3 5\n9 1 0 1 0 1 1 1 1 1 1\n7 1 1 1 1 1 1 1 1\n7 1 1 1 1 0 1 1 1\n6 0 1 0 1 0 0 0\n4 0 0 1 1 1\n1 1 1\n2 9\n2 1\n2 0 0 0\n2 0 0 0\n2 1 1 1\n2 0 0 0\n2 0 0 0\n2 1 1 1\n2 0 1 0\n1 1 1\n1 1 1\n8 6\n3 5 4 2 1 8 7 6\n8 1 1 1 1 1 1 1 1 1\n8 1 1 1 1 1 1 1 1 1\n8 1 0 1 0 1 1 0 0 1\n4 0 1 0 0 1\n2 0 0 1\n1 0 0\n0 0\n======== EXPECT\nTeste 1\n2\nTeste 2\n1\nTeste 3\n3\nTeste 4\n9\nTeste 5\n5\nTeste 6\n5\nTeste 7\n6\nTeste 8\n8\nTeste 9\n1\nTeste 10\n2\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
