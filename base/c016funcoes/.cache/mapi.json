{
    "title": "@c016funcoes: @c016funcoes",
    "description": "# @c016funcoes\n\nDescri\u00e7\u00e3o no c\u00f3digo.\n\n[C\u00f3digo](https://github.com/qxcodefup/arcade/blob/master/base/c016funcoes/.cache/draft.c)\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n======== EXPECT\nOl\u00e1, esta \u00e9 uma fun\u00e7\u00e3o!\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n======== EXPECT\nOl\u00e1, esta \u00e9 uma fun\u00e7\u00e3o!\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "c": [
            {
                "name": "main.c",
                "contents": "#include <stdio.h>\n\n// Em C, declaramos fun\u00e7\u00f5es com uma estrutura que inclui:\n// - O tipo de retorno (void, int, double, char e etc)\n// - O nome da fun\u00e7\u00e3o\n// - Os par\u00e2metros (se houver)\n// - O corpo da fun\u00e7\u00e3o, que cont\u00e9m o c\u00f3digo que ser\u00e1 executado\n// - Note que a fun\u00e7\u00e3o main tamb\u00e9m \u00e9 uma fun\u00e7\u00e3o, assim como as mais comuns (printf, scanf), linguagem C \u00e9 feita quase s\u00f3 de fun\u00e7\u00f5es. \n\n// TODO: Declare a fun\u00e7\u00e3o `exibirMensagem` que:\n// - N\u00e3o retorna nada (use o tipo `void`)\n// - N\u00e3o recebe par\u00e2metros (use `void` entre par\u00eanteses)\n// - Dentro do corpo da fun\u00e7\u00e3o, use `printf` para exibir a mensagem \"Ol\u00e1, esta \u00e9 uma fun\u00e7\u00e3o!\".\n//TODO: Corrija esta fun\u00e7\u00e3o para exibir a mensagem corretamente.\n\nvoid exibirMensagem() {\n    //DEL!\n    printf(\"Ol\u00e1, esta \u00e9 uma fun\u00e7\u00e3o!\");\n    //ACT!\n    // printf(\"\");\n    //ADD!\n}\n\nint main() {\n    // Agora vamos chamar a fun\u00e7\u00e3o `exibirMensagem` no `main`.\n    // Para chamar fun\u00e7\u00f5es, basta repetir o nome dela + abre e fecha parenteses (dentro podem haver valores ou n\u00e3o, veremos isso mais a frente)\n    // TODO: Chame a fun\u00e7\u00e3o `exibirMensagem` abaixo:\n    //DEL!\n    exibirMensagem();\n    //ACT!\n    // exibirMensagem\n    //ADD!\n    \n\n    return 0;\n}\n",
                "type": "show"
            }
        ]
    }
}
