{
    "title": "@imperador: Deu a louca no imperador",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@imperador: Deu a louca no imperador</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"deu-a-louca-no-imperador\">Deu a louca no imperador</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/imperador/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Na Roma antiga era comum existirem arenas para batalhas, uma das mais\nfamosas \u00e9 o Coliseu. Os gladiadores (pessoas que lutavam na arena) eram,\nna maioria, escravos, prisioneiros de guerra ou alugados por seus\nsenhores, homens condenados a trabalhos for\u00e7ados ou jovens livres, de\nfam\u00edlias empobrecidas, que abra\u00e7avam a profiss\u00e3o em busca de dinheiro e\nrecompensas generosamente distribu\u00eddas aos vitoriosos.</p>\n<p>Havia tamb\u00e9m os condenados \u00e0 morte, mas estes n\u00e3o podiam se defender\n\u2014 entravam na arena desarmados.</p>\n<p>Cyzar O Imperador, certa vez estava cansado dos combate 1x1 e\nresolveu fazer uma \u00fanica e gigante batalha, ele juntou todos os\nGladiadores e Condenados \u00e0 morte no Coliseu para divertir os seus\nsubordinados.</p>\n<p>Por\u00e9m, como os Gladiadores podem se defender, eles t\u00eam duas vezes\nmais chances de vit\u00f3rias. Eles poderiam perder caso a quantidade de\nCondenados \u00e0 morte fosse maior ou melhor posicionada. \u00c0s vezes, os\nGladiadores demoram a lutar, ent\u00e3o Cyzar fica entediado e decide\nesquentar ainda mais as coisas colocando um Le\u00e3o na arena!</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Usando G para gladiadores, C para Condenados \u00e0 morte e L para o Le\u00e3o,\no usu\u00e1rio preencher\u00e1 a matriz quadrada.</p>\n<p>OBS: Como a economia em Roma estava prec\u00e1ria, o Cyzar s\u00f3 possu\u00eda um\nLe\u00e3o, logo s\u00f3 pode haver um L na arena.</p>\n<p>Regras do c\u00e1lculo:</p>\n<ul>\n<li>G vale por 2 C</li>\n<li>Caso C esteja posicionado na diagonal secund\u00e1ria da matriz, ele tem\no mesmo valor de um G.</li>\n<li>Caso apare\u00e7a um L, toda a linha ser\u00e1 destru\u00edda!</li>\n</ul>\n<p>Some todos os G\u2019s e C\u2019s e determine quem \u00e9 o vencedor.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>1a linha: N\u00famero de linhas e colunas da matriz</li>\n<li>linhas seguintes, o conte\u00fado da matriz com tr\u00eas caracteres apenas\n<ul>\n<li>G para Gladiadores</li>\n<li>C para Condenados a morte</li>\n<li>L para Le\u00e3o.</li>\n</ul></li>\n</ul>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<ul>\n<li>\u201cGladiadores\u201d caso G seja maior</li>\n<li>\u201cCondenados a morte\u201d caso C seja maior</li>\n<li>\u201cNingu\u00e9m\u201d caso contr\u00e1rio.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>G L G</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>C C C</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>C G G</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>Condenados a morte</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>G G C</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>C C C</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>G C C</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>Condenados a morte</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>C C G</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>C G C</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>G C C</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>Ninguem</span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3\nG L G\nC C C\nC G G\n======== EXPECT\nCondenados a morte\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\nG G C\nC C C\nG C C\n======== EXPECT\nCondenados a morte\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\nC C G\nC G C\nG C C\n======== EXPECT\nNinguem\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n3\nC G G\nC G C\nG C C\n======== EXPECT\nGladiadores\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n3\nC C G\nC L C\nG C C\n======== EXPECT\nNinguem\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n3\nC G G\nC L C\nG C C\n======== EXPECT\nGladiadores\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n4\nG L G G\nC C C C\nG C G C\nC G C C\n======== EXPECT\nCondenados a morte\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n4\nG G G L\nC C G C\nC G C C\nG C C G\n======== EXPECT\nNinguem\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n5\nG G G G L\nC C G C C\nC C G C C\nC C G G C\nC C C C C\n======== EXPECT\nCondenados a morte\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n5\nC C C C C\nL G G C G\nG G G G G\nC G C G C\nC G C C C\n======== EXPECT\nGladiadores\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
