{
    "title": "@bala: Dist\u00e2ncia entre dois pontos",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@bala: Dist\u00e2ncia entre dois pontos</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Dist\u00e2ncia entre dois pontos</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/bala/cover.jpg\" /></p>\n<h2>Contexto</h2>\n<p>Um atirador de elite estava atirando a 400 metros de dist\u00e2ncia em um papel milimetrado. Para calcular a imprecis\u00e3o da arma, ele dava dois tiros e media a dist\u00e2ncia entre eles. Como ele n\u00e3o tinha uma r\u00e9gua, ele pegou as coordenadas dos pontos no plano cartesiano e usou a f\u00f3rmula da dist\u00e2ncia entre dois pontos.</p>\n<div class=\"arithmatex\">\\[d_{AB} = \\sqrt{(x\u2082 - x\u2081)^2 + (y\u2082 - y\u2081)^2}\\]</div>\n<p>Dada a f\u00f3rmula da dist\u00e2ncia entre dois pontos e os valores x e y de cada ponto, imprima a dist\u00e2ncia entre os pontos com duas casas decimais.</p>\n<h3>Entrada</h3>\n<ul>\n<li>Coordenada <strong><em>X</em></strong> e coordenada <strong><em>Y</em></strong> do primeiro ponto.</li>\n<li>Coordenada <strong><em>X</em></strong> e coordenada <strong><em>Y</em></strong> do segundo ponto.</li>\n</ul>\n<h4>Sa\u00edda</h4>\n<ul>\n<li>A dist\u00e2ncia entre os pontos com duas casas decimais.</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">01</span>\n<span class=\"mi\">3</span>\n<span class=\"mi\">7</span>\n<span class=\"mi\">1</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mf\">3.61</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">02</span>\n<span class=\"mi\">1</span>\n<span class=\"mf\">8.2</span>\n<span class=\"o\">-</span><span class=\"mi\">4</span>\n<span class=\"mi\">12</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mf\">6.28</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">03</span>\n<span class=\"mi\">3</span>\n<span class=\"mi\">1</span>\n<span class=\"mi\">3</span>\n<span class=\"mi\">5</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mf\">4.00</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<h2>Dicas</h2>\n<h3>Programando em: C</h3>\n<ul>\n<li>Para exibir um n\u00famero de ponto flutuante, do tipo <code>float</code>, com duas casas decimais em C, utilize o especificador de formato <code>%.2f</code> na fun\u00e7\u00e3o <code>printf</code>. O n\u00famero <strong>2</strong> ap\u00f3s o ponto indica a quantidade de casas decimais a serem exibidas.</li>\n</ul>\n<div class=\"language-c highlight\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">resultado</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;%.2f</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">resultado</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>Para calcular a raiz quadrada em C, voc\u00ea deve incluir a biblioteca <code>math.h</code> em seu projeto e utilizar a fun\u00e7\u00e3o <code>sqrt()</code> passando como argumento o valor do qual deseja encontrar a raiz.</li>\n</ul>\n<div class=\"language-c highlight\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;math.h&gt;</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">raiz</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sqtr</span><span class=\"p\">(</span><span class=\"n\">numero</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>A fun\u00e7\u00e3o <code>pow()</code> da biblioteca <code>math.h</code> \u00e9 a maneira mais direta de elevar um n\u00famero a qualquer pot\u00eancia em C. Para elevar um n\u00famero ao quadrado, basta passar o n\u00famero como primeiro argumento e 2 como segundo argumento.</li>\n</ul>\n<div class=\"language-c highlight\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;math.h&gt;</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">quadrado</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"n\">numero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Programando em: Python</h3>\n<ul>\n<li>Para exibir um n\u00famero de ponto flutuante com duas casas decimais em Python, utilize o formato <code>:.2f</code> dentro da fun\u00e7\u00e3o <code>print</code>. O n\u00famero <strong>2</strong> ap\u00f3s o ponto indica o n\u00famero de casas decimais que ser\u00e3o exibidas:</li>\n</ul>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">resultado</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{:.2f}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">resultado</span><span class=\"p\">))</span>\n</code></pre></div>\n<ul>\n<li>Em Python, o c\u00e1lculo da raiz quadrada \u00e9 bastante simples e direto. Basta importar o m\u00f3dulo math e utilizar a fun\u00e7\u00e3o <code>sqrt()</code></li>\n</ul>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">math</span>\n<span class=\"n\">raiz</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqtr</span><span class=\"p\">(</span><span class=\"n\">numero</span><span class=\"p\">)</span>\n</code></pre></div>\n<ul>\n<li>Em Python, temos duas formas principais de elevar um n\u00famero ao quadrado:</li>\n</ul>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">math</span>\n<span class=\"n\">quadrado</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"n\">numero</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"n\">quadrado</span> <span class=\"o\">=</span>  <span class=\"n\">numero</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<h3>Programando em: TypeScript</h3>\n<ul>\n<li>Para exibir um n\u00famero com duas casas decimais em TypeScript, utilize o m\u00e9todo <code>toFixed(2)</code> do objeto <code>Number</code>. O n\u00famero <strong>2</strong> especifica a quantidade de casas decimais que ser\u00e3o exibidas ap\u00f3s o ponto decimal:</li>\n</ul>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">resultado</span><span class=\"p\">.</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mf\">2</span><span class=\"p\">));</span><span class=\"w\"> </span>\n</code></pre></div>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"nx\">resultado</span><span class=\"p\">.</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mf\">2</span><span class=\"p\">));</span>\n</code></pre></div>\n<ul>\n<li>Em TypeScript, a abordagem \u00e9 semelhante \u00e0 do JavaScript. N\u00e3o h\u00e1 uma biblioteca padr\u00e3o para fun\u00e7\u00f5es matem\u00e1ticas, mas podemos utilizar a biblioteca Math global.</li>\n</ul>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nx\">raiz</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">sqrt</span><span class=\"p\">(</span><span class=\"nx\">numero</span><span class=\"p\">);</span>\n</code></pre></div>\n<ul>\n<li>Em TypeScript, temos duas formas principais de elevar um n\u00famero ao quadrado:</li>\n</ul>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nx\">quadrado</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">numero</span><span class=\"w\"> </span><span class=\"o\">**</span><span class=\"w\"> </span><span class=\"mf\">2</span><span class=\"p\">;</span>\n</code></pre></div>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nx\">quadrado</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">numero</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">2</span><span class=\"p\">);</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3\n7\n1\n4\n======== EXPECT\n3.61\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n1\n8.2\n-4\n12\n======== EXPECT\n6.28\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3\n1\n3\n5\n======== EXPECT\n4.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n7\n3\n4\n-1\n======== EXPECT\n5.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n0\n0\n0\n0\n======== EXPECT\n0.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n47.88\n43.91\n34.8\n40.02\n======== EXPECT\n13.65\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
