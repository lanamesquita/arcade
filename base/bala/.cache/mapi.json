{
    "title": "Dist\u00e2ncia entre dois pontos",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>Dist\u00e2ncia entre dois pontos</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n  <script\n  src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js\"\n  type=\"text/javascript\"></script>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"dist\u00e2ncia-entre-dois-pontos\">Dist\u00e2ncia entre dois pontos</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/bala/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"contexto\">Contexto</h2>\n<p>Um atirador de elite estava atirando a 400 metros de dist\u00e2ncia em um\npapel milimetrado. Para calcular a imprecis\u00e3o da arma, ele dava dois\ntiros e media a dist\u00e2ncia entre eles. Como ele n\u00e3o tinha uma r\u00e9gua, ele\npegou as coordenadas dos pontos no plano cartesiano e usou a f\u00f3rmula da\ndist\u00e2ncia entre dois pontos.</p>\n<p><span class=\"math display\">\\[d_{AB} = \\sqrt{(x\u2082 - x\u2081)^2 + (y\u2082 -\ny\u2081)^2}\\]</span></p>\n<p>Dada a f\u00f3rmula da dist\u00e2ncia entre dois pontos e os valores x e y de\ncada ponto, imprima a dist\u00e2ncia entre os pontos com duas casas\ndecimais.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>Coordenada <strong><em>X</em></strong> e coordenada\n<strong><em>Y</em></strong> do primeiro ponto.</li>\n<li>Coordenada <strong><em>X</em></strong> e coordenada\n<strong><em>Y</em></strong> do segundo ponto.</li>\n</ul>\n<h4 id=\"sa\u00edda\">Sa\u00edda</h4>\n<ul>\n<li>A dist\u00e2ncia entre os pontos com duas casas decimais.</li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT <span class=\"dv\">0</span><span class=\"er\">1</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">7</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">4</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">3.61</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT <span class=\"dv\">0</span><span class=\"er\">2</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">8.2</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">-</span><span class=\"dv\">4</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">12</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">6.28</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT <span class=\"dv\">0</span><span class=\"er\">3</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">1</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">3</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dv\">5</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">========</span> EXPECT</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fl\">4.00</span></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> FINISH</span></code></pre></div>\n<h2 id=\"dicas\">Dicas</h2>\n<h3 id=\"programando-em-c\">Programando em: C</h3>\n<ul>\n<li>Para exibir um n\u00famero de ponto flutuante, do tipo\n<code>float</code>, com duas casas decimais em C, utilize o\nespecificador de formato <code>%.2f</code> na fun\u00e7\u00e3o\n<code>printf</code>. O n\u00famero <strong>2</strong> ap\u00f3s o ponto indica a\nquantidade de casas decimais a serem exibidas.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">float</span> resultado<span class=\"op\">;</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    printf<span class=\"op\">(</span><span class=\"st\">&quot;</span><span class=\"sc\">%.2f\\n</span><span class=\"st\">&quot;</span><span class=\"op\">,</span> resultado<span class=\"op\">);</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<ul>\n<li>Para calcular a raiz quadrada em C, voc\u00ea deve incluir a biblioteca\n<code>math.h</code> em seu projeto e utilizar a fun\u00e7\u00e3o\n<code>sqrt()</code> passando como argumento o valor do qual deseja\nencontrar a raiz.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;math.h&gt;</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    raiz <span class=\"op\">=</span> sqtr<span class=\"op\">(</span>numero<span class=\"op\">);</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<ul>\n<li>A fun\u00e7\u00e3o <code>pow()</code> da biblioteca <code>math.h</code> \u00e9 a\nmaneira mais direta de elevar um n\u00famero a qualquer pot\u00eancia em C. Para\nelevar um n\u00famero ao quadrado, basta passar o n\u00famero como primeiro\nargumento e 2 como segundo argumento.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;math.h&gt;</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"dt\">int</span> main<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    quadrado <span class=\"op\">=</span> pow<span class=\"op\">(</span>numero<span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">);</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<h3 id=\"programando-em-python\">Programando em: Python</h3>\n<ul>\n<li>Para exibir um n\u00famero de ponto flutuante com duas casas decimais em\nPython, utilize o formato <code>:.2f</code> dentro da fun\u00e7\u00e3o\n<code>print</code>. O n\u00famero <strong>2</strong> ap\u00f3s o ponto indica o\nn\u00famero de casas decimais que ser\u00e3o exibidas:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"ss\">f&quot;</span><span class=\"sc\">{</span>resultado<span class=\"sc\">:.2f}</span><span class=\"ss\">&quot;</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">{:.2f}</span><span class=\"st\">&quot;</span>.<span class=\"bu\">format</span>(resultado))</span></code></pre></div>\n<ul>\n<li>Em Python, o c\u00e1lculo da raiz quadrada \u00e9 bastante simples e direto.\nBasta importar o m\u00f3dulo math e utilizar a fun\u00e7\u00e3o\n<code>sqrt()</code></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> math</span>\n<span id=\"cb9-2\"><a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>raiz <span class=\"op\">=</span> math.sqtr(numero)</span></code></pre></div>\n<ul>\n<li>Em Python, temos duas formas principais de elevar um n\u00famero ao\nquadrado:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb10\"><pre\nclass=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb10-1\"><a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> math</span>\n<span id=\"cb10-2\"><a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>quadrado <span class=\"op\">=</span> math.<span class=\"bu\">pow</span>(numero, <span class=\"dv\">2</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb11\"><pre\nclass=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>quadrado <span class=\"op\">=</span>  numero <span class=\"op\">**</span> <span class=\"dv\">2</span></span></code></pre></div>\n<h3 id=\"programando-em-typescript\">Programando em: TypeScript</h3>\n<ul>\n<li>Para exibir um n\u00famero com duas casas decimais em TypeScript, utilize\no m\u00e9todo <code>toFixed(2)</code> do objeto <code>Number</code>. O n\u00famero\n<strong>2</strong> especifica a quantidade de casas decimais que ser\u00e3o\nexibidas ap\u00f3s o ponto decimal:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb12\"><pre\nclass=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">console</span><span class=\"op\">.</span><span class=\"fu\">log</span>(resultado<span class=\"op\">.</span><span class=\"fu\">toFixed</span>(<span class=\"dv\">2</span>))<span class=\"op\">;</span> </span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb13\"><pre\nclass=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">write</span>(resultado<span class=\"op\">.</span><span class=\"fu\">toFixed</span>(<span class=\"dv\">2</span>))<span class=\"op\">;</span></span></code></pre></div>\n<ul>\n<li>Em TypeScript, a abordagem \u00e9 semelhante \u00e0 do JavaScript. N\u00e3o h\u00e1 uma\nbiblioteca padr\u00e3o para fun\u00e7\u00f5es matem\u00e1ticas, mas podemos utilizar a\nbiblioteca Math global.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb14\"><pre\nclass=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> raiz<span class=\"op\">:</span> <span class=\"dt\">number</span> <span class=\"op\">=</span> <span class=\"bu\">Math</span><span class=\"op\">.</span><span class=\"fu\">sqrt</span>(numero)<span class=\"op\">;</span></span></code></pre></div>\n<ul>\n<li>Em TypeScript, temos duas formas principais de elevar um n\u00famero ao\nquadrado:</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb15\"><pre\nclass=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb15-1\"><a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> quadrado<span class=\"op\">:</span> <span class=\"dt\">number</span> <span class=\"op\">=</span> numero <span class=\"op\">**</span> <span class=\"dv\">2</span><span class=\"op\">;</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb16\"><pre\nclass=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">let</span> quadrado<span class=\"op\">:</span> <span class=\"dt\">number</span> <span class=\"op\">=</span> <span class=\"bu\">Math</span><span class=\"op\">.</span><span class=\"fu\">pow</span>(numero<span class=\"op\">,</span> <span class=\"dv\">2</span>)<span class=\"op\">;</span></span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3\n7\n1\n4\n======== EXPECT\n3.61\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n1\n8.2\n-4\n12\n======== EXPECT\n6.28\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3\n1\n3\n5\n======== EXPECT\n4.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n7\n3\n4\n-1\n======== EXPECT\n5.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n0\n0\n0\n0\n======== EXPECT\n0.00\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n47.88\n43.91\n34.8\n40.02\n======== EXPECT\n13.65\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
