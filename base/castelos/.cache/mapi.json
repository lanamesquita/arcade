{
    "title": "@castelos: Castelo de Cubos",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@castelos: Castelo de Cubos</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Castelo de Cubos</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/cover.jpg\" /></p>\n<p>Zezim da Carro\u00e7a ganhou bloquinhos de montar do seu pai. Como ele n\u00e3o tinha computador pra jogar Minecraft, resolveu criar constru\u00e7\u00f5es magn\u00edficas com seus bloquinhos de montar. Decidiu organizar v\u00e1rios n\u00edveis usando a seguinte l\u00f3gica:</p>\n<p>1\u00b2 = 1 <a href=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/quadrado1.png\"><img alt=\"Square number 1.png\" src=\"https://upload.wikimedia.org/wikipedia/commons/7/78/Square_number_1.png\" /></a></p>\n<p>2\u00b2 = 4 <a href=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/quadrado2.png\"><img alt=\"Square number 4.png\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e1/Square_number_4.png\" /></a></p>\n<p>3\u00b2 = 9 <a href=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/quadrado9.png\"><img alt=\"Square number 9.png\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/4c/Square_number_9.png\" /></a>  </p>\n<p>4\u00b2 = 16 <a href=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/quadrado16.png\"><img alt=\"Square number 16.png\" src=\"https://upload.wikimedia.org/wikipedia/commons/f/f8/Square_number_16.png\" /></a>  </p>\n<p>5\u00b2 = 25 <a href=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/castelos/quadrado25.png\"><img alt=\"Square number 25.png\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0a/Square_number_25.png\" /></a></p>\n<p>Algum tempo depois descobriu que esses n\u00fameros, 1, 2, 4, 9, 16, 25, etc eram chamados n\u00fameros quadrados ou quadrados perfeitos. Se quiser conhecer mais sobre as propriedades desse n\u00fameros acesse <a href=\"https://pt.wikipedia.org/wiki/N%C3%BAmero_quadrado\">https://pt.wikipedia.org/wiki/N%C3%BAmero_quadrado</a></p>\n<h2>A\u00e7\u00e3o</h2>\n<p>Dado um inteiro lido do usu\u00e1rio, determine, sem uso de operadores reais (como raiz quadrada, por exemplo), se ele \u00e9 um quadrado perfeito, imprimindo \"sim\" se ele for quadrado perfeito e \"nao\", caso contr\u00e1rio.  </p>\n<h3>Entrada</h3>\n<ul>\n<li>Um n\u00famero inteiro.</li>\n</ul>\n<h2>Sa\u00edda</h2>\n<ul>\n<li>sim ou nao</li>\n</ul>\n<h2>Exemplos</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">16</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">sim</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">18</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">nao</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">81</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">sim</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n16\n======== EXPECT\nsim\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n18\n======== EXPECT\nnao\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n81\n======== EXPECT\nsim\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n0\n======== EXPECT\nnao\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n5\n======== EXPECT\nnao\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n1\n======== EXPECT\nsim\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n4\n======== EXPECT\nsim\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n35\n======== EXPECT\nnao\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n140\n======== EXPECT\nnao\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n6084\n======== EXPECT\nsim\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
