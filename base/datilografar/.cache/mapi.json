{
    "title": "@datilografar: M\u00e1quina Quebrada",
    "description": "# M\u00e1quina Quebrada\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/datilografar/cover.jpg)\n\n## Motiva\u00e7\u00e3o\n\nDurante anos, todos os contratos da Associa\u00e7\u00e3o de Contratos da Modernol\u00e2ndia (ACM) foram datilografados em uma velha m\u00e1quina de datilografia.\n\nRecentemente Sr. Miranda, um dos contadores da ACM, percebeu que a m\u00e1quina apresentava falha em um, e apenas um, dos d\u00edgitos num\u00e9ricos.  \nMais especificamente, o d\u00edgito falho, quando datilografado, n\u00e3o \u00e9 impresso na folha, como se a tecla correspondente n\u00e3o tivesse sido pressionada.  \nEle percebeu que isso poderia ter alterado os valores num\u00e9ricos representados nos contratos e, preocupado com a contabilidade, quer saber, a partir dos valores originais negociados nos contratos, que ele mantinha em anota\u00e7\u00f5es manuscritas, quais os valores de fato representados nos contratos.\n\nPor exemplo, se a m\u00e1quina apresenta falha no d\u00edgito 5, o valor 1500 seria datilografado no contrato como 100, pois o 5 n\u00e3o seria impresso.  \nNote que o Sr. Miranda quer saber o valor num\u00e9rico representado no contrato, ou seja, nessa mesma m\u00e1quina, o n\u00famero 5000 corresponde ao valor num\u00e9rico 0, e n\u00e3o 000 (como ele de fato aparece impresso).\n\nMaratona de Programa\u00e7\u00e3o da SBC 2010.  \n\n## A\u00e7\u00e3o\n\nFa\u00e7a um programa que dado um numero representando a tecla quebrada e o numero negociado inicialmente, imprima o numero representado no contrato.\n\n### Entrada\n\n* A primeira um digito entre 1 e 9 representando a tecla quebrada\n* A segunda o n\u00famero que foi negociado inicialmente, com at\u00e9 100 d\u00edgitos.\n\n## Sa\u00edda\n\n* Voc\u00ea deve imprimir uma linha contendo um \u00fanico inteiro V, o valor num\u00e9rico representado de fato no contrato.\n\n## Exemplos\n\n``` py\n>>>>>>>> INSERT\n5\n5000000\n======== EXPECT\n0\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n5\n5004000\n======== EXPECT\n4000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n3\n123456\n======== EXPECT\n12456\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n9\n99999999991999999\n======== EXPECT\n1\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n7\n777\n======== EXPECT\n0\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n5000000\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n5004000\n======== EXPECT\n4000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n123456\n======== EXPECT\n12456\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n9\n99999999991999999\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n7\n777\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
