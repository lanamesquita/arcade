{
    "title": "@vet_ii: Carregando vetor na mesma linha",
    "description": "# Carregando vetor na mesma linha\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/vet_ii/cover.jpg)\n\n## Contexto\n\nAo lidar com grandes volumes de dados em sequ\u00eancia, \u00e9 comum ler e armazenar todos os elementos de uma vez para otimizar o processo. Nessa situa\u00e7\u00e3o, \u00e9 preciso ler m\u00faltiplos valores de uma \u00fanica linha e carreg\u00e1-los em um vetor para processamento e exibi\u00e7\u00e3o subsequente. Neste exerc\u00edcio, os elementos ser\u00e3o lidos e exibidos de maneira compacta.\n\n### Entrada\n\n- A primeira linha cont\u00e9m um n\u00famero inteiro **N** representando a quantidade de elementos.\n- A segunda linha cont\u00e9m **N** inteiros, separados por espa\u00e7os, que devem ser inseridos no vetor.\n\n### Sa\u00edda\n\n- Imprima o vetor carregado entre colchetes, com os elementos separados por espa\u00e7os.\n\n### Restri\u00e7\u00f5es\n\n- **0 \u2264 N \u2264 1000** (O vetor pode ter de 0 a 1000 elementos)\n- Cada elemento ser\u00e1 um n\u00famero inteiro.\n\n## Testes\n\n```py\n>>>>>>>> INSERT\n3\n1 2 3\n======== EXPECT\n[ 1 2 3 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n0\n======== EXPECT\n[ ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n1\n6\n======== EXPECT\n[ 6 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n5\n1 2 3 4 5\n======== EXPECT\n[ 1 2 3 4 5 ]\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n4\n4 2 3 1\n======== EXPECT\n[ 4 2 3 1 ]\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3\n1 2 3\n======== EXPECT\n[ 1 2 3 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n0\n======== EXPECT\n[ ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n6\n======== EXPECT\n[ 6 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n1 2 3 4 5\n======== EXPECT\n[ 1 2 3 4 5 ]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
