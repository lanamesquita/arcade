{
    "title": "@resto: Resultado e resto na divis\u00e3o",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@resto: Resultado e resto na divis\u00e3o</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Resultado e resto na divis\u00e3o</h1>\n<p><img alt=\"Imagem Teorema da Divis\u00e3o\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/resto/cover.png\" /></p>\n<h2>Contexto</h2>\n<p>Na cadeira de Matem\u00e1tica D\u00edscreta, o professor ir\u00e1 apresentar o teorema da\ndivis\u00e3o. Ele diz o seguinte:</p>\n<p><strong>Teorema (Algoritmo da Divis\u00e3o):</strong> Seja <strong><em>n</em></strong> um inteiro qualquer e <strong><em>d</em></strong> um inteiro\npositivo, existe um \u00fanico par de inteiros <strong><em>q</em></strong> e <strong><em>r</em></strong> com <strong><em>0 \u2264 r &lt; d</em></strong> tais que:</p>\n<div class=\"arithmatex\">\\[n = d*q + r\\]</div>\n<p>Em outras palavras, dado dois inteiros positivos, por exemplo, 115 e 15,\npodemos escrever 115 = 15*7 + 10, onde 7 e 10 s\u00e3o o quociente e o resto da\ndivis\u00e3o de 115 por 15.</p>\n<p>Implemente um programa que receba dois inteiros positivos e calcule o valor do\nquociente e resto da divis\u00e3o do primeiro pelo segundo n\u00famero.</p>\n<h3>Entrada</h3>\n<ul>\n<li>Dois inteiros, um por linha</li>\n</ul>\n<h3>Sa\u00edda</h3>\n<ul>\n<li>Quociente e resto separados por espa\u00e7o</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">0</span>\n<span class=\"mi\">51</span>\n<span class=\"mi\">31</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">1</span> <span class=\"mi\">20</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">1</span>\n<span class=\"mi\">398</span>\n<span class=\"mi\">50</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">7</span> <span class=\"mi\">48</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">2</span>\n<span class=\"mi\">350</span>\n<span class=\"mi\">40</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">8</span> <span class=\"mi\">30</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">3</span>\n<span class=\"mi\">587</span>\n<span class=\"mi\">460</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">1</span> <span class=\"mi\">127</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">4</span>\n<span class=\"mi\">215</span>\n<span class=\"mi\">158</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">1</span> <span class=\"mi\">57</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">5</span>\n<span class=\"mi\">760</span>\n<span class=\"mi\">360</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">40</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">6</span>\n<span class=\"mi\">498</span>\n<span class=\"mi\">203</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">92</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">7</span>\n<span class=\"mi\">61</span>\n<span class=\"mi\">25</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">11</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">8</span>\n<span class=\"mi\">32</span>\n<span class=\"mi\">7</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">4</span> <span class=\"mi\">4</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">9</span>\n<span class=\"mi\">873</span>\n<span class=\"mi\">254</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">3</span> <span class=\"mi\">111</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">10</span>\n<span class=\"mi\">689</span>\n<span class=\"mi\">326</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">37</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">11</span>\n<span class=\"mi\">939</span>\n<span class=\"mi\">155</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">6</span> <span class=\"mi\">9</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">12</span>\n<span class=\"mi\">302</span>\n<span class=\"mi\">78</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">3</span> <span class=\"mi\">68</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">13</span>\n<span class=\"mi\">584</span>\n<span class=\"mi\">318</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">1</span> <span class=\"mi\">266</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"mi\">14</span>\n<span class=\"mi\">899</span>\n<span class=\"mi\">317</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">2</span> <span class=\"mi\">265</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<h2>Dicas</h2>\n<h3>Programando em: C</h3>\n<ul>\n<li>Quando queremos saber o valor restante ap\u00f3s uma divis\u00e3o inteira, empregamos o operador m\u00f3dulo (<code>%</code>):</li>\n</ul>\n<div class=\"language-c highlight\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">resto</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dividendo</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">divisor</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Programando em: Python</h3>\n<ul>\n<li>Quando queremos saber o valor restante ap\u00f3s uma divis\u00e3o inteira, empregamos o operador m\u00f3dulo (<code>%</code>):</li>\n</ul>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"n\">resto</span> <span class=\"o\">=</span> <span class=\"n\">dividendo</span> <span class=\"o\">%</span> <span class=\"n\">divisor</span>\n</code></pre></div>\n<h3>Programando em: TypeScript</h3>\n<ul>\n<li>Quando queremos saber o valor restante ap\u00f3s uma divis\u00e3o inteira, empregamos o operador m\u00f3dulo (<code>%</code>).:</li>\n</ul>\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nx\">resto</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">dividendo</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"nx\">divisor</span><span class=\"p\">;</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 0\n51\n31\n======== EXPECT\n1 20\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 1\n398\n50\n======== EXPECT\n7 48\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 2\n350\n40\n======== EXPECT\n8 30\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 3\n587\n460\n======== EXPECT\n1 127\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 4\n215\n158\n======== EXPECT\n1 57\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 5\n760\n360\n======== EXPECT\n2 40\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 6\n498\n203\n======== EXPECT\n2 92\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 7\n61\n25\n======== EXPECT\n2 11\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 8\n32\n7\n======== EXPECT\n4 4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 9\n873\n254\n======== EXPECT\n3 111\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n689\n326\n======== EXPECT\n2 37\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n939\n155\n======== EXPECT\n6 9\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 12\n302\n78\n======== EXPECT\n3 68\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 13\n584\n318\n======== EXPECT\n1 266\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 14\n899\n317\n======== EXPECT\n2 265\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
