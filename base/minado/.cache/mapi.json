{
    "title": "@minado: Campo Minado",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@minado: Campo Minado</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Campo Minado</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/cover.jpg\" /></p>\n<h2>Motiva\u00e7\u00e3o</h2>\n<p>Robert Donner, em 1989, criou um jogo cujo objetivo seria revelar a localiza\u00e7\u00e3o de minas em um campo sem que nenhuma seja detonada.  </p>\n<p>Para isso o tabuleiro \u00e9 formado de minas, n\u00fameros e espa\u00e7os vazios.</p>\n<p>As regras s\u00e3o simples :</p>\n<ul>\n<li>\n<p>Se um bloco \u00e9 um n\u00famero, ele informar\u00e1 quantas minas est\u00e3o escondidas nos oito quadrados que o cercam.  </p>\n</li>\n<li>\n<p>Se um bloco \u00e9 vazio, \u00e9 porque n\u00e3o h\u00e1 nenhuma mina ao seu redor.</p>\n</li>\n<li>Um bloco pode ser uma mina, nesse caso ele \u00e9 representado por um s\u00edmbolo.</li>\n</ul>\n<p>O jogador deve usar essas informa\u00e7\u00f5es para deduzir em que quadrados pr\u00f3ximos \u00e9 seguro clicar.  </p>\n<p>Dada uma matriz com a posi\u00e7\u00e3o de cada mina, seu o programa deve preencher o resto do campo (matriz) com n\u00fameros ou com vazios, por exemplo:</p>\n<p><img alt=\"1\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/q.jpg\" /></p>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">*-*</span>\n<span class=\"o\">---</span>\n<span class=\"o\">---</span>\n</code></pre></div>\n<p>Esse \u00e9 um campo 3x3 que tem duas minas (simbolizadas por *). Devemos preencher dessa forma:</p>\n<p><img alt=\"todos\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/q2.png\" />  </p>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">*</span>\n<span class=\"mi\">121</span>\n<span class=\"o\">---</span>\n</code></pre></div>\n<p>As minas s\u00e3o simbolizadas com asteriscos * e os campos vazios s\u00e3o simbolizados com sinal de menos -<br />\nMais exemplos no final da p\u00e1gina.</p>\n<h2>A\u00e7\u00e3o</h2>\n<p>Leia uma matriz com <strong>n</strong> linhas e <strong>m</strong> colunas com a posi\u00e7\u00e3o das minas. Preencha o restante da matriz seguindo as regras citadas.<br />\nConsidere ( 1 &lt;=\u00a0\u00a0<strong>n, m</strong>&lt;= 50).</p>\n<h3>Entrada</h3>\n<ul>\n<li>\n<p>O n\u00famero\u00a0<strong>n</strong>(linhas)e <strong>m</strong>(colunas)\u00a0.  </p>\n</li>\n<li>\n<p>Cada elemento da matriz: * ou -  </p>\n</li>\n</ul>\n<h2>Sa\u00edda</h2>\n<ul>\n<li>Campo preenchido com minas, vazios e n\u00fameros.</li>\n</ul>\n<h2>Exemplos</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">3</span> <span class=\"mi\">3</span>\n<span class=\"o\">***</span>\n<span class=\"o\">--*</span>\n<span class=\"o\">--*</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"o\">***</span>\n<span class=\"mi\">25</span><span class=\"o\">*</span>\n<span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">*</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">3</span> <span class=\"mi\">3</span>\n<span class=\"o\">---</span>\n<span class=\"o\">-*-</span>\n<span class=\"o\">---</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"mi\">111</span>\n<span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"mi\">1</span>\n<span class=\"mi\">111</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">3</span> <span class=\"mi\">5</span>\n<span class=\"o\">*----</span>\n<span class=\"o\">----*</span>\n<span class=\"o\">---**</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"o\">*</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">11</span>\n<span class=\"mi\">1113</span><span class=\"o\">*</span>\n<span class=\"o\">--</span><span class=\"mi\">1</span><span class=\"o\">**</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span>\n<span class=\"mi\">1</span> <span class=\"mi\">1</span>\n<span class=\"o\">*</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"o\">*</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<h2>Mais exemplos</h2>\n<p>O quadrado amarelo \u00e9 quem \u00e9 calculado no momento, e os vermelhos s\u00e3o as minas consideradas no c\u00e1lculo.</p>\n<p><img alt=\"ex1\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/q3.png\" /></p>\n<p><img alt=\"ex2\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/q4.png\" /></p>\n<p><img alt=\"ex3\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/minado/q5.png\" />  </p>\n<p>Se ainda tiver d\u00favidas de como funciona,\u00a0tente jogar um pouco. <a href=\"https://minesweeper.online/pt/new-game\">JOGO</a></p>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3 3\n***\n--*\n--*\n======== EXPECT\n***\n25*\n-2*\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3 3\n---\n-*-\n---\n======== EXPECT\n111\n1*1\n111\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3 5\n*----\n----*\n---**\n======== EXPECT\n*1-11\n1113*\n--1**\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1 1\n*\n======== EXPECT\n*\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n4 5\n---*-\n-****\n*---*\n-----\n======== EXPECT\n124*3\n2****\n*334*\n11-11\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n4 10\n*-*----*-*\n--*-*--*--\n-----*----\n*--------*\n======== EXPECT\n*3*3112*3*\n13*3*23*31\n12122*2121\n*1--111-1*\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
