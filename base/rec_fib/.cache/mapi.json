{
    "title": "@rec_fib: N\u00fameros de Fibonacci",
    "description": "# N\u00fameros de Fibonacci\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/rec_fib/cover.jpg)\n\n## Motiva\u00e7\u00e3o\n\nOs n\u00fameros de Fibonacci s\u00e3o definidos recursivamente de acordo com a express\u00e3o abaixo:\n\n```py\nse n=1 ou n=2, ent\u00e3o fib(n) = 1\nse n >= 3, ent\u00e3o fib(n) = fib(n-1) + fib(n-2).\n\nn         1  2  3  4  5  6   7   8   9\nfib(n)    1  1  2  3  5  8  13  21  34\n```\n\n## A\u00e7\u00e3o\n\nA fun\u00e7\u00e3o fib abaixo retorna o n-\u00e9simo n\u00famero de Fibonacci, mas de forma n\u00e3o recursiva. Forne\u00e7a uma fun\u00e7\u00e3o fib que seja recursiva.\n\n```C\nint fib(int n){\n    int f = 1, fib1 = 1, fib2 = 1, i;\n    for (i = 3; i <= n; i++) {\n        f = fib1 + fib2;\n        fib2 = fib1;\n        fib1 = f;\n    }\n    return f;\n}\n\nint main(){\n    int n;\n    scanf(\"%d\", &n);\n    printf(\"%d\", fib(n));\n}\n```\n\n## Exemplos\n\n``` py\n>>>>>>>> INSERT 01\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 02\n2\n======== EXPECT\n1\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 03\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 04\n4\n======== EXPECT\n3\n<<<<<<<< FINISH\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n2\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n4\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n5\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n6\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n7\n======== EXPECT\n13\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n8\n======== EXPECT\n21\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n9\n======== EXPECT\n34\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
