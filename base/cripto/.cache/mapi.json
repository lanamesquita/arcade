{
    "title": "@cripto: Criptografia de chave",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@cripto: Criptografia de chave</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Criptografia de chave</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/cripto/cover.jpg\" /></p>\n<h2>Motiva\u00e7\u00e3o</h2>\n<p>Yara quer desvendar um enigma, diga-se de passagem \u00e9 bem enigm\u00e1tico!!!</p>\n<p>O enigma consiste em um conjunto de caracteres aparentemente sem sentido, esse enigma so passa a fazer sentindo quando processado com uma 'Key' composto por um n\u00famero inteiro.</p>\n<p>O processamento consiste em fazer opera\u00e7\u00f5es short (^), bit a bit, entre cada caractere do\nenigma e cada digito da 'key', se a quantidade de d\u00edgitos da 'key' for menor que a quantidade de caracteres do enigma, a 'key' se repete, se a quantidade de caracteres do enigma for menor que a quantidade de d\u00edgitos da 'key', a 'key' se converte ao tamanho do enigma , desprezando os d\u00edgitos adicionais.</p>\n<h3>Exemplo</h3>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"n\">Enigma</span> <span class=\"o\">=</span> <span class=\"n\">nnb</span><span class=\"err\">!</span><span class=\"n\">ovofl</span>\n<span class=\"n\">Key</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>\n</code></pre></div>\n<p>Ao processar cada caractere do enigma acima com a 'key', temos:</p>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">b</span> <span class=\"err\">!</span> <span class=\"n\">o</span> <span class=\"n\">v</span> <span class=\"n\">o</span> <span class=\"n\">f</span> <span class=\"n\">l</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">o</span> <span class=\"n\">l</span> <span class=\"n\">a</span>   <span class=\"n\">m</span> <span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"n\">d</span> <span class=\"n\">o</span>\n</code></pre></div>\n<p>Perceba que na pr\u00e1tica os caracteres ser\u00e3o convertidos para o seu c\u00f3digo decimal ASCII.</p>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"s1\">&#39;n&#39;</span> <span class=\"o\">=</span> <span class=\"mi\">110</span> <span class=\"o\">=</span> <span class=\"mi\">1101110</span>\n <span class=\"mi\">1</span>  <span class=\"o\">=</span>  <span class=\"mi\">1</span>  <span class=\"o\">=</span> <span class=\"mi\">0000001</span>\n            <span class=\"mi\">1101111</span> <span class=\"o\">=</span> <span class=\"mi\">111</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;o&#39;</span>\n</code></pre></div>\n<p>Ufaaa! Em fim... Ajude Yara nessa missao :)</p>\n<h2>A\u00e7\u00e3o</h2>\n<p>Yara ir\u00e1 procurar a chave pra voc\u00ea.</p>\n<p>Ent\u00e3o dada a chave(KEY) e o enigma(E) de Yara retornar o enigma revelado.  </p>\n<h3>Entrada</h3>\n<p>Um conjunto de caracteres E, representando o enigma.</p>\n<p>1 Inteiro KEY representando a chave do enigma.</p>\n<h2>Saida</h2>\n<p>O enigma revelado.</p>\n<h2>Restri\u00e7\u00f5es</h2>\n<p>1 &lt; E &lt;= 100.</p>\n<p>1 &lt; KEY &lt;= 2147483647.</p>\n<h2>Exemplos</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"n\">Teste</span> <span class=\"mi\">0</span>\n<span class=\"n\">nnb</span><span class=\"err\">!</span><span class=\"n\">ovofl</span>\n<span class=\"mi\">123</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">ola</span> <span class=\"n\">mundo</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"n\">Teste</span> <span class=\"mi\">1</span>\n<span class=\"sa\">Br</span><span class=\"s1\">&#39;tbn+&#39;</span><span class=\"n\">qhdb</span><span class=\"s1\">&#39;tfeb+&#39;</span><span class=\"n\">iht</span><span class=\"s1\">&#39;tfebjht</span>\n<span class=\"mi\">777</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">Eu</span> <span class=\"n\">sei</span><span class=\"p\">,</span> <span class=\"n\">voce</span> <span class=\"n\">sabe</span><span class=\"p\">,</span> <span class=\"n\">nos</span> <span class=\"n\">sabemos</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">INSERT</span> <span class=\"n\">Teste</span> <span class=\"mi\">2</span>\n<span class=\"n\">jsmc</span><span class=\"o\">*&amp;</span><span class=\"n\">cs</span><span class=\"o\">&amp;</span><span class=\"n\">uis</span><span class=\"o\">&amp;</span><span class=\"n\">ucs</span><span class=\"o\">&amp;</span><span class=\"n\">vgo</span>\n<span class=\"mi\">666</span>\n<span class=\"o\">========</span> <span class=\"n\">EXPECT</span>\n<span class=\"n\">luke</span><span class=\"p\">,</span> <span class=\"n\">eu</span> <span class=\"n\">sou</span> <span class=\"n\">seu</span> <span class=\"n\">pai</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">FINISH</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT Teste 0\nnnb!ovofl\n123\n======== EXPECT\nola mundo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 1\nBr'tbn+'qhdb'tfeb+'iht'tfebjht\n777\n======== EXPECT\nEu sei, voce sabe, nos sabemos\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 2\njsmc*&cs&uis&ucs&vgo\n666\n======== EXPECT\nluke, eu sou seu pai\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 3\nJ%isjaj$hej%an$ph$kew%`c$wjwgw\n55464\n======== EXPECT\nO mundo nao eh um mar de rosas\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 4\ndh#un%mudaq%ruio/%tm#lvb`r#cqpdl\n103035\n======== EXPECT\neh um lugar sujo, um lugar cruel\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 5\nswg\"lcm\"swgp\"qc`gp\"m\"swclvm\"tmag\"gj\"fwpcm,\n222\n======== EXPECT\nque nao quer saber o quanto voce eh durao.\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 6\nWcj!ajp`p#wlfa!ff!ijamjlr#`$wm`d#seh\"eh`dv!ff!ijamjlr#uesc#rfhtsg#rf%rnaf!g`mycq\n1231354\n======== EXPECT\nVai botar voce de joelhos e voce vai ficar de joelhos para sempre se voce deixar\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 7\nSjgc(%`q*$kljaq`h$pel%fgp`w$rej%bivq`$ekhj$g$sl`g\n55464\n======== EXPECT\nVoce, eu, ninguem vai bater tao forte como a vida\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 8\nndr#ocl%rf!vqdub!ff%cbugq%glsvf+\n351312\n======== EXPECT\nmas nao se trata de bater forte.\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 9\nR`!qsdud!ad%pp`kuj!snfd%`bt`oq`%`u`kids%d%r`fphw!`l%gwdku`\n1515\n======== EXPECT\nSe trata de quanto voce aguenta apanhar e seguir em frente\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 10\nh'vrfish'qhdb'bo'dfwf}'cb'f`rbisfu'b'dhisnirfu'sbisfich\n77\n======== EXPECT\no quanto voce eh capaz de aguentar e continuar tentando\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Teste 11\nAj#eqpmo#uwf$qf$aljqfcwf$tfjafv,\n423\n======== EXPECT\nEh assim que se consegue vencer.\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
