{
    "title": "@pr_playfair: A cifra de Playfair",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@pr_playfair: A cifra de Playfair</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>A cifra de Playfair</h1>\n<p>O objetivo desse trabalho \u00e9 a constru\u00e7\u00e3o de um programa que realize a cifragem e a decifragem de um texto utilizando a criptografia de Playfair. Ele demandar\u00e1 de conhecimento dos assuntos de strings, matrizes e um pouco de arquivos.</p>\n<p><img alt=\"Autoria de Charles Wheatstone\" src=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/pr_playfair/author.jpg\" /></p>\n<p>O conte\u00fado dessa se\u00e7\u00e3o \u00e9 retirada do site abaixo. Apenas os conte\u00fados mais importantes foram copiados pra c\u00e1. Sugiro que voc\u00ea leia na \u00edntegra no seguinte <a href=\"http://www.numaboa.com.br/criptografia/substituicoes/poligramicas/1041-playfair\">site</a>.</p>\n<h2>Hist\u00f3ria</h2>\n<p>Apesar do nome do Bar\u00e3o de Playfair estar associado a uma das cifra cl\u00e1ssicas mais conhecidas, foi seu amigo, o cientista Charles Wheatstone, quem a concebeu. Ap\u00f3s sua cria\u00e7\u00e3o em 1854, o bar\u00e3o conseguiu que o governo brit\u00e2nico adotasse oficialmente o uso da cifra - da\u00ed o nome Cifra de Playfair.</p>\n<p>A Playfair \u00e9 uma cifra de bloco primitiva, usando alguns princ\u00edpios comuns \u00e0s cifras de bloco atuais. O melhor meio de se aproximar da criptologia moderna, sem ter que enfrentar a teoria dos n\u00fameros e a matem\u00e1tica, \u00e9 entendendo a Playfair.</p>\n<p>As letras s\u00e3o tomadas duas a duas, e aplicadas a uma grade de 5 por 5 que cont\u00e9m o alfabeto cifrante.</p>\n<p>A Playfair possui outras vantagens: n\u00e3o precisa de tabelas ou dispositivos complicados, possui uma palavra-chave que pode ser memorizada ou trocada com facilidade, \u00e9 muito f\u00e1cil de ser implementada e pouco sujeita a erros. Devido a estas caracter\u00edsticas o sistema \u00e9 perfeito para ser usado como uma \\\"cifra de campo\\\".</p>\n<h2>Preparando o texto</h2>\n<p>A prepara\u00e7\u00e3o do texto claro \u00e9 extremamente f\u00e1cil: basta formar grupos de 2 letras, os blocos digr\u00e2micos. Cada bloco receber\u00e1 um tratamento de acordo com as regras cifrantes (veja abaixo). O texto claro que ser\u00e1 cifrado com a Playfair \u00e9:</p>\n<p>MORRO MAS SAPRENDO C</p>\n<p>Preparamos o texto para ser cifrado: MO RR OM AS SA PR EN DO OC</p>\n<p>De imediato notamos que o \u00faltimo bloco ficou com apenas uma letra e que\nexiste um bloco com letra dupla (RR). Letras repetidas impedem que a\ncifra possa ser aplicada corretamente. Nestes casos, convenciona-se uma\nletra de separa\u00e7\u00e3o. Geralmente s\u00e3o usados preferencialmente o X e o Z,\ncaso sejam dois XX. Caso falte uma letra no final, adiciona-se X ou Z.\nCorrigindo os blocos obtemos:</p>\n<div class=\"language-text highlight\"><pre><span></span><code>MO RX RO MA SX SA PR EN DO CX\n</code></pre></div>\n<h2>A matriz de cifragem</h2>\n<p>O alfabeto cifrante proposto por Wheatstone fica disposto numa grade de 5 por 5. Como o alfabeto latino possui 26 letras, \u00e9 preciso eliminar uma das letras. Eliminaremos o W.</p>\n<p>Al\u00e9m disto, para facilitar a memoriza\u00e7\u00e3o do cifrante, Wheatstone sugeriu come\u00e7ar o preenchimento da grade com uma palavra-chave. O restante das c\u00e9lulas \u00e9 preenchido com as letras faltantes em ordem alfab\u00e9tica.</p>\n<p>No nosso exemplo usaremos a palavra-chave \\\"POWER RANGER\\\". Ignoraremos o W e retiraremos os duplicados. Ficamos com \\\"POERANG\\\". Preenchemos a grade come\u00e7ando de cima pela esquerda. Depois colocamos o resto do alfabeto em ordem alfabetica.</p>\n<p>Resultado:</p>\n<div class=\"language-text highlight\"><pre><span></span><code>P O E R A\nN G B C D\nF H I J K\nL M Q S T \nU V X Y Z\n</code></pre></div>\n<h2>Cifragem</h2>\n<p>As letras de um bloco podem ter apenas 3 localiza\u00e7\u00f5es na grade: est\u00e3o na mesma linha, est\u00e3o na mesma coluna ou est\u00e3o em linhas e colunas diferentes. Portanto, existem apenas 3 regras que devem ser aplicadas aos blocos digr\u00e2micos:</p>\n<p>1. Letras na mesma linha s\u00e3o substitu\u00eddas pelas letras \u00e0 sua direita. Caso uma das letras do bigrama esteja na \u00faltima coluna da grade, \\\"roda-se a linha\\\" e utiliza-se a letra da primeira coluna.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>    Ex: PR &gt; OA, CG &gt; DB, ZV &gt; UX, ZY &gt; UZ\n</code></pre></div>\n<p>2. Letras na mesma coluna s\u00e3o substitu\u00eddas pelas letras abaixo delas. Caso a letra esteja na \u00faltima linha, \\\"roda-se a coluna\\\" e utiliza-se a letra da primeira linha.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>    Ex: PF &gt; NL, PU &gt; NP, VM &gt; OV, FN &gt; LF\n</code></pre></div>\n<p>3. Letras em linhas e colunas diferentes: as letras do bigrama formam um \\\"quadril\u00e1tero\\\" e s\u00e3o substitu\u00eddas pelas letras posicionadas nos cantos contr\u00e1rios do quadril\u00e1tero.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>    Ex: PG &gt; ON, GP &gt; NO, PB &gt; EN, ZP &gt; UA\n</code></pre></div>\n<h2>Aplicando a grade</h2>\n<p>Nosso texto e nossa grade ficarm assim.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>Texto claro:\nMO RX RO MA SX SA PR EN DO CX\n\nGrade:\n\nP O E R A\nN G B C D\nF H I J K\nL M Q S T \nU V X Y Z\n</code></pre></div>\n<p>Cifrando usando as regras temos:</p>\n<div class=\"language-text highlight\"><pre><span></span><code>Texto claro:\nMO RX RO MA SX SA PR EN DO CX\nTexto cifrado:\nVG EY AE TO QY TR OA PB GA BY\n</code></pre></div>\n<p>Para descriptografar \u00e9 s\u00f3 fazer as opera\u00e7\u00f5es contr\u00e1rias.</p>\n<h2>O programa</h2>\n<p>Voc\u00ea deve fazer criptografar e descriptografar. Ao ser executado ele\nreceber\u00e1 o nome do arquivo que cont\u00e9m o texto por parametro e perguntar\u00e1\na senha ao usu\u00e1rio. Ele mostrar\u00e1 o texto processado na tela.</p>\n<div class=\"language-text highlight\"><pre><span></span><code>--Conte\u00fado de texto.txt\nMORRO MAS SAPRENDO C\n\n--Rodando o programa:\n# ./cifrar texto.txt\n&gt;&gt; Digite a chave:\n&lt;&lt; POWERRANGER\n&gt;&gt; O texto cifrado eh:\nVG EY AE TO QY TR OA PB GA BY\n\n\n\n--Conteudo do arquivo cifra.txt\nVG EY AE TO QY TR OA PB GA BY\n\n--Rodando o programa de decifrar\n# ./decifrar cifra.txt\n&gt;&gt; Digite a chave:\n&lt;&lt; POWERRANGER\n&gt;&gt; O texto decifrado eh:\nMO RX RO MA SX SA PR EN DO C\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
