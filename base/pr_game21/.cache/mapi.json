{
    "title": "@game21: Projeto: Blackjack 21",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@game21: Projeto: Blackjack 21</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n</head>\n<body>\n<h1 id=\"projeto-blackjack-21\">Projeto: Blackjack 21</h1>\n<p>Voc\u00ea ir\u00e1 implementar uma vers\u00e3o simplificada do jogo\n<strong>Blackjack 21</strong>, tamb\u00e9m conhecido como \u201cvinte e um\u201d, onde\num jogador humano enfrenta a mesa (computador). A atividade pode feita\nem tr\u00eas etapas, com aumento progressivo na complexidade.</p>\n<p>Para conhecer melhor o jogo original, consulte:</p>\n<ul>\n<li><a href=\"http://pt.wikipedia.org/wiki/Blackjack\"\nclass=\"uri\">http://pt.wikipedia.org/wiki/Blackjack</a></li>\n</ul>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/game21/blackjack.jpg\"\nalt=\"Blackjack\" />\n<figcaption aria-hidden=\"true\">Blackjack</figcaption>\n</figure>\n<hr />\n<h2 id=\"regras-simplificadas\">Regras Simplificadas</h2>\n<ul>\n<li>Cartas de 2 a 10 valem seus pr\u00f3prios valores.</li>\n<li>Valete (J), Dama (Q) e Rei (K) valem 10 pontos.</li>\n<li>\u00c1s (A) pode valer 1 ou 11, o que for mais vantajoso. Se a soma\nestourar 21, transforme o(s) \u00c1s em 1 at\u00e9 que a soma fique v\u00e1lida ou\nestoure de vez.</li>\n</ul>\n<hr />\n<h2 id=\"funcionamento-do-jogo\">Funcionamento do Jogo</h2>\n<ul>\n<li>O jogador come\u00e7a com <strong>2 cartas</strong>. A mesa come\u00e7a com\n<strong>1 carta vis\u00edvel</strong>.</li>\n<li>O jogador pode <strong>pedir carta (1)</strong> ou <strong>parar\n(2)</strong>. Se estourar 21, perde.</li>\n<li>Quando o jogador para, a mesa joga at\u00e9 vencer ou estourar.</li>\n<li>Em caso de empate de pontos, <strong>a mesa vence</strong>.</li>\n</ul>\n<p>Linhas com <code>&gt;&gt;</code> indicam que o programa est\u00e1\nesperando uma entrada do jogador.</p>\n<hr />\n<h2 id=\"etapa-1-primeira-vers\u00e3o\">Etapa 1 \u2013 Primeira Vers\u00e3o</h2>\n<p>Implemente uma \u00fanica rodada entre jogador e mesa, com as seguintes\nintera\u00e7\u00f5es:</p>\n<pre class=\"text\"><code>Iniciando Rodada:\n# Mesa recebe  7 - Total  7 [ 7 ]\n# Voce recebe  A - Total 11 [ A ]\n# Voce recebe  2 - Total 13 [ A 2 ]\nPedir = 1, Parar = 2 \n&gt;&gt; 1\n# Voce recebe  3 - Total 16 [ A 2 3 ]\nPedir = 1, Parar = 2 \n&gt;&gt; 2\n# Mesa joga, calcula e exibe o resultado final</code></pre>\n<hr />\n<h2 id=\"etapa-2-apostas-e-m\u00faltiplas-rodadas\">Etapa 2 \u2013 Apostas e\nM\u00faltiplas Rodadas</h2>\n<p>Adicione:</p>\n<ul>\n<li>Sistema de apostas com <strong>m\u00ednimo de 5 e m\u00e1ximo de\n100</strong>.</li>\n<li>Saldo inicial: <strong>100</strong> unidades de dinheiro.</li>\n<li>Se ganhar, recebe <strong>o dobro da aposta</strong>.</li>\n<li>O jogador pode sair a qualquer momento digitando <strong>-1</strong>\ncomo valor da aposta.</li>\n</ul>\n<pre class=\"text\"><code>Rodada 1:\nDinheiro: 100\nDigite valor da aposta ou -1 para sair: 25\n...\nRodada 2:\nDinheiro: 75\nDigite valor da aposta ou -1 para sair: 50\n...</code></pre>\n<hr />\n<h2 id=\"etapa-3-valida\u00e7\u00e3o-de-entradas\">Etapa 3 \u2013 Valida\u00e7\u00e3o de\nEntradas</h2>\n<p>Adicione verifica\u00e7\u00e3o de entradas em todos os momentos:</p>\n<ul>\n<li>Apostas devem ser num\u00e9ricas e dentro dos limites.</li>\n<li>Op\u00e7\u00f5es de a\u00e7\u00e3o devem ser v\u00e1lidas (1 ou 2).</li>\n<li>Tratamento de erros como textos, valores fora do intervalo,\nnegativos etc.</li>\n</ul>\n<pre class=\"text\"><code>Digite valor da aposta ou -1 para sair: vinte\nValor inv\u00e1lido.\nDigite valor da aposta ou -1 para sair: 300\nValor inv\u00e1lido.\n...\nPedir = 1, Parar = 2\n&gt;&gt; batatas\nValor inv\u00e1lido.</code></pre>\n<hr />\n<h2 id=\"desafio-opcional\">Desafio Opcional</h2>\n<p>Se quiser ir al\u00e9m:</p>\n<ul>\n<li>Adicione <strong>m\u00faltiplos jogadores</strong>, com turnos\nalternados.</li>\n<li>Implemente regras extras como <strong>dobrar aposta</strong> ou\n<strong>dividir cartas</strong> (\u201csplit\u201d).</li>\n</ul>\n<hr />\n<p>Bom trabalho e divirta-se programando!</p>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
