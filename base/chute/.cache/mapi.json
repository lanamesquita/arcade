{
    "title": "@chute: Quem chega mais perto",
    "description": "# Quem chega mais perto\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/chute/cover.jpg)\n\n## Descri\u00e7\u00e3o\n\nPedro e Jo\u00e3o foram no S\u00edlvio Santos. O programa era aquele que o S\u00edlvio mostrava um produto do mercantil, ambos os participantes chutavam o pre\u00e7o e a pessoa que chegasse mais pr\u00f3ximo do pre\u00e7o real ganhava.\n\nO objetivo do seu programa \u00e9 informar quem ganhou a disputa. Voc\u00ea receber\u00e1 o valor do produto e o valor do chute de cada jogador. O jogador que chegar mais perto ganha.\n\nSe ambos ficarem \u00e0 mesma distancia do valor real, ent\u00e3o houve empate.\n\n### Entrada\n\n* linha 1: o valor do produto.(valor inteiro entre 1 e 100)\n* linha 2: o chute do Primeiro\n* linha 3: o chute de Segundo\n\n### Sa\u00edda\n\n* \"primeiro\" se o chute do Primeiro for o mais pr\u00f3ximo do valor do produto\n* \"segundo\" se o chute do Segundo for o mais pr\u00f3ximo do valor do produto\n* \"empate\" caso ambos ficarem \u00e0 mesma distancia\n\n## Exemplos\n\n``` py\n>>>>>>>> INSERT\n1\n2\n3\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n3\n5\n4\n======== EXPECT\nsegundo\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n10\n11\n9\n======== EXPECT\nempate\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n20\n21\n22\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT\n20\n21\n21\n======== EXPECT\nempate\n<<<<<<<< FINISH\n```\n\n## Ajuda\n\n* Ao ser realizado a diferen\u00e7a entre o chute de um jogador e o valor do produto, o resultado pode ser negativo. Para eliminar esse resultado negativo existe a fun\u00e7\u00e3o `abs`.\n* A fun\u00e7\u00e3o `abs` retorna o valor absoluto de um n\u00famero, ou seja, o valor do n\u00famero sem sinal.\n\nObserva\u00e7\u00e3o\n\n* Para ser utilizada a fun\u00e7\u00e3o `abs`, ela deve ser importada. Segue as formas de importa\u00e7\u00e3o em algumas linguagens e como utilizar:\n\nEm **C**:\n\n```c\n#include <math.h> //c\n\nabs(-3) //retorna 3\n```\n\nEm **C++**:\n\n```c++\n#include <cmath> //c++\n\nabs(-3) //retorna 3\n```\n\nEm **Python**:\n\n```py\n#python\nabs(-3) #retorna 3\n```\n\nEm **JavaScript**:\n\n```javascript\n//javascript \nMath.abs(-3) //retorna 3\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n1\n2\n3\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n5\n4\n======== EXPECT\nsegundo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n11\n9\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n21\n22\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n21\n21\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n10\n11\n11\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n10\n12\n11\n======== EXPECT\nsegundo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n10\n11\n7\n======== EXPECT\nprimeiro\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n20\n22\n18\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n20\n21\n19\n======== EXPECT\nempate\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
