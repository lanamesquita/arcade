{
    "title": "@celsius: Conversor para Fahrenheit",
    "description": "# Conversor para Fahrenheit\n\n![Imagem Conversor Celsius para Fahrenheit](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/celsius/cover.jpg)\n\n## Contexto\n\nNo Brasil, a unidade de temperatura que utilizamos \u00e9 o grau Celsius (\u00baC),\ndiferente dos pa\u00edses de origem inglesa. Nesses pa\u00edses, a unidade usual \u00e9 o\nFahrenheit (\u00baF).\n\nAs an\u00e1lises matem\u00e1ticas envolvendo situa\u00e7\u00f5es comparativas entre temperaturas em\ngraus Celsius e temperaturas em Fahrenheit originaram uma express\u00e3o alg\u00e9brica no\nintuito de convers\u00f5es de temperatura:\n\n$$T_f = 1.8 \\cdot T_c + 32$$\n\nImplemente um programa que recebe a temperatura em graus Celsius e converte para\nFahrenheit. O valor fornecido ser\u00e1 fracion\u00e1rio (double).\n\n### Entrada\n\n- Temperatura em Celsius  \n\n#### Sa\u00edda\n\n- O valor correspondente em Fahrenheit, com 6 casas decimais.\n\n## Testes\n\n```py\n>>>>>>>> INSERT 0\n43.000000\n======== EXPECT\n109.400000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 1\n55.000000\n======== EXPECT\n131.000000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 2\n99.000000\n======== EXPECT\n210.200000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 3\n69.000000\n======== EXPECT\n156.200000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 4\n64.000000\n======== EXPECT\n147.200000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 5\n84.000000\n======== EXPECT\n183.200000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 6\n95.000000\n======== EXPECT\n203.000000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 7\n56.000000\n======== EXPECT\n132.800000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 8\n36.000000\n======== EXPECT\n96.800000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 9\n13.000000\n======== EXPECT\n55.400000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 11\n31.000000\n======== EXPECT\n87.800000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 12\n18.000000\n======== EXPECT\n64.400000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 13\n98.000000\n======== EXPECT\n208.400000\n<<<<<<<< FINISH\n```\n\n```py\n>>>>>>>> INSERT 14\n63.000000\n======== EXPECT\n145.400000\n<<<<<<<< FINISH\n```\n\n## Dicas\n\n### Programando em: C\n\n- Para exibir um n\u00famero de ponto flutuante do tipo `double`, recomendado por sua maior precis\u00e3o, com seis casas decimais em C, utilize o especificador de formato `%.6f` na fun\u00e7\u00e3o `printf`. O n\u00famero **6** ap\u00f3s o ponto indica a quantidade de casas decimais a serem exibidas:\n\n```c\nint main() {\n    double resultado;\n    printf(\"%.6f\\n\", resultado);\n}\n```\n\n### Programando em: Python\n\n- Para exibir um n\u00famero de ponto flutuante com seis casas decimais em Python, utilize o formato `:.6f` dentro da fun\u00e7\u00e3o `print`. O n\u00famero **6** ap\u00f3s o ponto indica o n\u00famero de casas decimais que ser\u00e3o exibidas:\n\n``` python\nprint(f\"{resultado:.6f}\")\n```\n\n```py\nprint(\"{:.6f}\".format(resultado))\n```\n\n### Programando em: TypeScript\n\n- Para exibir um n\u00famero com seis casas decimais em TypeScript, utilize o m\u00e9todo `toFixed(6)` do objeto `Number`. O n\u00famero **6** especifica a quantidade de casas decimais que ser\u00e3o exibidas ap\u00f3s o ponto decimal:\n\n```ts\nconsole.log(resultado.toFixed(6)); \n```\n\n```ts\nwrite(resultado.toFixed(6));\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 0\n43.000000\n======== EXPECT\n109.400000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 1\n55.000000\n======== EXPECT\n131.000000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 2\n99.000000\n======== EXPECT\n210.200000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 3\n69.000000\n======== EXPECT\n156.200000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 4\n64.000000\n======== EXPECT\n147.200000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 5\n84.000000\n======== EXPECT\n183.200000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 6\n95.000000\n======== EXPECT\n203.000000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 7\n56.000000\n======== EXPECT\n132.800000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 8\n36.000000\n======== EXPECT\n96.800000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 9\n13.000000\n======== EXPECT\n55.400000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n31.000000\n======== EXPECT\n87.800000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 12\n18.000000\n======== EXPECT\n64.400000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 13\n98.000000\n======== EXPECT\n208.400000\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 14\n63.000000\n======== EXPECT\n145.400000\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
