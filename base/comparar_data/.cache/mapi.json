{
    "title": "@comparar_data: Comparar data",
    "description": "# Comparar data\n\n![_](https://raw.githubusercontent.com/qxcodefup/arcade/master/base/comparar_data/cover.jpg)\n\nConsidere o seguinte tipo de registro que deve ser usado em seu programa:\n\n```c\ntypedef struct {\n     int dia;\n     int mes;\n     int ano;\n} Data;\n\ntypedef enum { LT, EQ, GT } compare;\n\n```\n\nImplemente uma fun\u00e7\u00e3o que recebe duas datas e devolve um valor da enumera\u00e7\u00e3o `compare`. A fun\u00e7\u00e3o devolve LT (less than) se a primeira data \u00e9 mais antiga que a segunda, GT (greater than) se a primeira data \u00e9 mais recente que a segunda e EQ (equal) se as duas datas s\u00e3o iguais.\n\n```c\ncompare compararDatas(Data dt1, Data dt2)\n```\n\nA fun\u00e7\u00e3o principal do seu programa \u00e9 a seguinte:\n\n```c\n#include <stdio.h>\n\ntypedef struct{\n     int dia;\n     int mes;\n     int ano;\n}Data;\n\ntypedef enum { LT, EQ, GT} compare;\n\ncompare compararDatas(Data dt1, Data dt2);\n\nint main(){\n\n    Data d1 = {2,8,1990};\n    Data d2 = {4,5,2000};\n    compare res;\n    res = compararDatas(d1,d2); //LT\n    printf(\"%d\\n\", res); //0\n}\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT Test 1\n2\n4\n2000\n1\n4\n2000\n======== EXPECT\nMais recente\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Test 2\n2\n3\n1999\n1\n4\n2000\n======== EXPECT\nMais antiga\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Test 3\n1\n4\n2000\n2\n4\n2000\n======== EXPECT\nMais antiga\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Test 4\n1\n4\n2000\n2\n4\n2001\n======== EXPECT\nMais antiga\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Test 5\n1\n5\n2000\n2\n4\n2000\n======== EXPECT\nMais recente\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT Test 6\n1\n5\n2000\n1\n5\n2000\n======== EXPECT\nIguais\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
